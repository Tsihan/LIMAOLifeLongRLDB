
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('8'))
AND (it2.id in ('6'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('Austria','Belgium','Brazil','Hungary','India','Mexico','Poland','Spain'))
AND (mi2.info in ('Mono','Silent'))
AND (kt.kind in ('episode','movie','tv movie'))
AND (rt.role in ('costume designer','production designer'))
AND (n.gender IS NULL)
AND (t.production_year <= 1975)
AND (t.production_year >= 1875)
AND (k.keyword IN ('based-on-play','cigarette-smoking','friendship','independent-film','jealousy','lesbian-sex','male-nudity','marriage','mother-daughter-relationship','one-word-title','oral-sex','police','singing','song'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 4 3 3 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.00000000e+00 1.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 8.84955749e-03 8.84955749e-03 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.04345236e-04 4.28571433e-01
 0.00000000e+00 0.00000000e+00 0.00000000e+00 8.93923570e-04
 7.48666062e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 1.00000000e+00 0.00000000e+00 3.48630399e-01
 0.00000000e+00 1.66666672e-01 1.81086034e-01 0.00000000e+00
 0.00000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  63.715265041395476
the difference value is:  63.715265041395476
the difference value is:  63.715265041395476
created a new module and initialize the weights for other
created a new module and initialize the weights for hash join
created a new module and initialize the weights for nested loop join
Planning took 296.9ms
q10a, predicted time: 4.7
q10a,(predicted 4.7),/*+ HashJoin(it2 kt it1 k mk mi1 mi2 t rt ci n)
 HashJoin(kt it1 k mk mi1 mi2 t rt ci n)
 HashJoin(it1 k mk mi1 mi2 t rt ci n)
 HashJoin(k mk mi1 mi2 t rt ci n)
 HashJoin(mk mi1 mi2 t rt ci n)
 HashJoin(mi1 mi2 t rt ci n)
 HashJoin(mi2 t rt ci n)
 HashJoin(t rt ci n)
 HashJoin(rt ci n)
 HashJoin(ci n)
 SeqScan(it2)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(mi1)
 SeqScan(mi2)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(ci)
 IndexScan(n)
 Leading((it2 (kt (it1 (k (mk (mi1 (mi2 (t (rt (ci n))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('8'))
AND (it2.id in ('6'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('Austria','Belgium','Brazil','Hungary','India','Mexico','Poland','Spain'))
AND (mi2.info in ('Mono','Silent'))
AND (kt.kind in ('episode','movie','tv movie'))
AND (rt.role in ('costume designer','production designer'))
AND (n.gender IS NULL)
AND (t.production_year <= 2020)
AND (t.production_year >= 1875)
AND (k.keyword IN ('based-on-play','cigarette-smoking','friendship','independent-film','jealousy','lesbian-sex','male-nudity','marriage','mother-daughter-relationship','one-word-title','oral-sex','police','singing','song'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.00000000e+00 1.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 8.84955749e-03 8.84955749e-03 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.04345236e-04 4.28571433e-01
 0.00000000e+00 0.00000000e+00 0.00000000e+00 8.93923570e-04
 7.48666062e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 1.00000000e+00 0.00000000e+00 3.48630399e-01
 0.00000000e+00 1.66666672e-01 9.73203480e-01 0.00000000e+00
 0.00000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  54.83074300860926
the difference value is:  54.83074300860926
the difference value is:  54.83074300860926
Planning took 656.7ms
q10b, predicted time: 6.2
q10b,(predicted 6.2),/*+ HashJoin(kt it2 it1 k mk mi2 mi1 t rt n ci)
 HashJoin(it2 it1 k mk mi2 mi1 t rt n ci)
 HashJoin(it1 k mk mi2 mi1 t rt n ci)
 HashJoin(k mk mi2 mi1 t rt n ci)
 HashJoin(mk mi2 mi1 t rt n ci)
 HashJoin(mi2 mi1 t rt n ci)
 HashJoin(mi1 t rt n ci)
 HashJoin(t rt n ci)
 HashJoin(rt n ci)
 HashJoin(n ci)
 SeqScan(kt)
 SeqScan(it2)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(mi2)
 SeqScan(mi1)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(n)
 IndexScan(ci)
 Leading((kt (it2 (it1 (k (mk (mi2 (mi1 (t (rt (n ci))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('8'))
AND (it2.id in ('6'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('Austria','Belgium','Brazil','Hungary','India','Mexico','Poland','Spain'))
AND (mi2.info in ('Mono','Silent'))
AND (kt.kind in ('tv movie'))
AND (rt.role in ('costume designer','production designer'))
AND (n.gender IS NULL)
AND (t.production_year <= 1975)
AND (t.production_year >= 1875)
AND (k.keyword IN ('based-on-play','cigarette-smoking','friendship','independent-film','jealousy','lesbian-sex','male-nudity','marriage','mother-daughter-relationship','one-word-title','oral-sex','police','singing','song'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 4 3 3 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.00000000e+00 1.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 8.84955749e-03 8.84955749e-03 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.04345236e-04 1.42857149e-01
 0.00000000e+00 0.00000000e+00 0.00000000e+00 8.93923570e-04
 7.48666062e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 1.00000000e+00 0.00000000e+00 3.48630399e-01
 0.00000000e+00 1.66666672e-01 1.81086034e-01 0.00000000e+00
 0.00000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  63.539748796722826
the difference value is:  63.539748796722826
the difference value is:  63.539748796722826
Planning took 1030.2ms
q10c, predicted time: 6510.5
q10c,(predicted 6510.5),/*+ NestLoop(mi1 it2 kt mi2 t ci it1 n rt mk k)
 NestLoop(mi1 it2 kt mi2 t ci it1 n rt mk)
 NestLoop(mi1 it2 kt mi2 t ci it1 n rt)
 NestLoop(mi1 it2 kt mi2 t ci it1 n)
 NestLoop(mi1 it2 kt mi2 t ci it1)
 NestLoop(mi1 it2 kt mi2 t ci)
 HashJoin(mi1 it2 kt mi2 t)
 HashJoin(it2 kt mi2 t)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(mi1)
 SeqScan(it2)
 SeqScan(kt)
 IndexScan(mi2)
 SeqScan(t)
 IndexScan(ci)
 IndexScan(it1)
 IndexScan(n)
 SeqScan(rt)
 IndexScan(mk)
 IndexScan(k)
 Leading((((((((mi1 (it2 (kt (mi2 t)))) ci) it1) n) rt) mk) k)) */
---------------------------------------
sql_str:  SELECT MIN(n.name) AS member_in_charnamed_movie FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 3 4 5 4 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 13  2  3 12  3  4 11  4  5 10  5  6  9  6  7  8  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 3.6416635e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 7.4532309e-06
 0.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  36.650604424840736
the difference value is:  36.650604424840736
the difference value is:  36.650604424840736
Planning took 245.2ms
q11a, predicted time: 25.2
q11a,(predicted 25.2),/*+ HashJoin(n cn t k mk ci mc)
 HashJoin(cn t k mk ci mc)
 HashJoin(t k mk ci mc)
 HashJoin(k mk ci mc)
 HashJoin(mk ci mc)
 HashJoin(ci mc)
 SeqScan(n)
 SeqScan(cn)
 SeqScan(t)
 SeqScan(k)
 SeqScan(mk)
 IndexScan(ci)
 IndexScan(mc)
 Leading((n (cn (t (k (mk (ci mc))))))) */
---------------------------------------
sql_str:  SELECT MAX(n.name) AS member_in_charnamed_movie FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 3 4 5 4 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 13  2  3 12  3  4 11  4  5 10  5  6  9  6  7  8  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 3.6416635e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 7.4532309e-06
 0.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  17.37268230411254
the difference value is:  17.37268230411254
the difference value is:  17.37268230411254
Planning took 109.8ms
q11b, predicted time: 8255.1
q11b,(predicted 8255.1),/*+ HashJoin(t cn mc n ci k mk)
 HashJoin(cn mc n ci k mk)
 HashJoin(mc n ci k mk)
 HashJoin(n ci k mk)
 HashJoin(ci k mk)
 HashJoin(k mk)
 SeqScan(t)
 SeqScan(cn)
 SeqScan(mc)
 SeqScan(n)
 SeqScan(ci)
 IndexScan(k)
 IndexScan(mk)
 Leading((t (cn (mc (n (ci (k mk))))))) */
---------------------------------------
sql_str:  SELECT MIN(n.name) AS member_in_charnamed_movie FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[uk]' AND k.keyword ='character-name-in-title' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 3 4 4 4 4 4 5]
indexes_env_matrix for this sql:  [ 1  2 13  2  3 12  3  4 11  4  5 10  5  6  9  6  7  8  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0]
query_enc_matrix for this sql:  [0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 9.361822e-05 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 7.453231e-06
 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 1.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
 1.000000e+00 0.000000e+00 0.000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  37.528620518583864
the difference value is:  37.528620518583864
the difference value is:  37.528620518583864
Planning took 182.5ms
q11c, predicted time: 49.9
q11c,(predicted 49.9),/*+ HashJoin(k cn mk n ci t mc)
 HashJoin(cn mk n ci t mc)
 HashJoin(mk n ci t mc)
 HashJoin(n ci t mc)
 HashJoin(ci t mc)
 HashJoin(t mc)
 SeqScan(k)
 SeqScan(cn)
 SeqScan(mk)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(t)
 SeqScan(mc)
 Leading((k (cn (mk (n (ci (t mc))))))) */
---------------------------------------
sql_str:  SELECT MIN(n.name) AS member_in_charnamed_american_movie, MIN(n.name) AS a1 FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND n.name  LIKE 'B%' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 3 4 5 4 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 13  2  3 12  3  4 11  4  5 10  5  6  9  6  7  8  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 3.6416635e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 7.4532309e-06
 0.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 8.0807373e-02 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  16.48099560132472
the difference value is:  16.48099560132472
the difference value is:  16.48099560132472
Planning took 77.0ms
q12a, predicted time: 6783.8
q12a,(predicted 6783.8),/*+ HashJoin(t cn mc n ci k mk)
 HashJoin(cn mc n ci k mk)
 HashJoin(mc n ci k mk)
 HashJoin(n ci k mk)
 HashJoin(ci k mk)
 HashJoin(k mk)
 SeqScan(t)
 SeqScan(cn)
 SeqScan(mc)
 SeqScan(n)
 SeqScan(ci)
 IndexScan(k)
 IndexScan(mk)
 Leading((t (cn (mc (n (ci (k mk))))))) */
---------------------------------------
sql_str:  SELECT MIN(n.name) AS member_in_charnamed_american_movie, MIN(n.name) AS a1 FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[uk]' AND k.keyword ='character-name-in-title' AND n.name  LIKE 'B%' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 3 4 4 4 4 4 5]
indexes_env_matrix for this sql:  [ 1  2 13  2  3 12  3  4 11  4  5 10  5  6  9  6  7  8  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0]
query_enc_matrix for this sql:  [0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 9.361822e-05 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 7.453231e-06
 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 1.000000e+00 0.000000e+00 8.080737e-02 0.000000e+00 0.000000e+00
 1.000000e+00 0.000000e+00 0.000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  36.57723415238164
the difference value is:  36.57723415238164
the difference value is:  36.57723415238164
Planning took 186.2ms
q12c, predicted time: 10.0
q12c,(predicted 10.0),/*+ HashJoin(t k mk cn n ci mc)
 HashJoin(k mk cn n ci mc)
 HashJoin(mk cn n ci mc)
 HashJoin(cn n ci mc)
 HashJoin(n ci mc)
 HashJoin(ci mc)
 SeqScan(t)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(cn)
 SeqScan(n)
 IndexScan(ci)
 IndexScan(mc)
 Leading((t (k (mk (cn (n (ci mc))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Mono'))
AND (it1.id IN ('13','6','8'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('A4163','B6563','D1316','F6521','F6523','F6524','J5216','J5262','P3616'))
AND (ci.note IS NULL)
AND (rt.role in ('actor'))
AND (it5.id in ('32'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 3 5 4 5 4 5 3 4]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5  6  5  0  0  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.0610288e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 1.4285715e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.4195266e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 7.0058941e-03 3.2351846e-03 8.3333336e-02
 1.3999696e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  114.04197569980855
Other difference exceed the threshold, need to switch module.
the difference value is:  114.04197569980855
Hash difference exceed the threshold, need to switch module.
the difference value is:  114.04197569980855
Nested loop difference exceed the threshold, need to switch module.
Planning took 355.8ms
q13a, predicted time: 676.1
q13a,(predicted 676.1),/*+ HashJoin(an it5 it4 kt it3 k mk rt pi1 n ci mii1 t mii2 mi1 it1)
 HashJoin(an it5 it4 kt it3 k mk rt pi1 n ci mii1 t mii2 mi1)
 HashJoin(it5 it4 kt it3 k mk rt pi1 n ci mii1 t mii2 mi1)
 HashJoin(it5 it4 kt it3 k mk rt pi1 n ci mii1 t mii2)
 HashJoin(it4 kt it3 k mk rt pi1 n ci mii1 t mii2)
 HashJoin(kt it3 k mk rt pi1 n ci mii1 t mii2)
 HashJoin(kt it3 k mk rt pi1 n ci mii1 t)
 HashJoin(it3 k mk rt pi1 n ci mii1 t)
 HashJoin(k mk rt pi1 n ci mii1 t)
 HashJoin(mk rt pi1 n ci mii1 t)
 HashJoin(rt pi1 n ci mii1 t)
 HashJoin(pi1 n ci mii1 t)
 HashJoin(n ci mii1 t)
 HashJoin(ci mii1 t)
 HashJoin(mii1 t)
 SeqScan(an)
 SeqScan(it5)
 SeqScan(it4)
 SeqScan(kt)
 SeqScan(it3)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(rt)
 SeqScan(pi1)
 SeqScan(n)
 SeqScan(ci)
 IndexScan(mii1)
 SeqScan(t)
 IndexScan(mii2)
 IndexScan(mi1)
 IndexScan(it1)
 Leading(((an ((it5 (it4 ((kt (it3 (k (mk (rt (pi1 (n (ci (mii1 t))))))))) mii2))) mi1)) it1)) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode'))
AND (t.production_year <= 2020)
AND (t.production_year >= 1955)
AND (mi1.info IN ('Mono'))
AND (it1.id IN ('13','7','8'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('A4163','B6563','D1316','F6521','F6523','F6524','J5216','J5262','P3616'))
AND (ci.note IS NULL)
AND (rt.role in ('actor'))
AND (it5.id in ('32'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 3 5 4 5 4 5 3 4]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5  6  5  0  0  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.0610288e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 1.4285715e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.4195266e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 7.0058941e-03 3.2351846e-03 8.3333336e-02
 8.9440739e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  110.4363148367401
Other difference exceed the threshold, need to switch module.
the difference value is:  110.4363148367401
Hash difference exceed the threshold, need to switch module.
the difference value is:  110.4363148367401
Nested loop difference exceed the threshold, need to switch module.
Planning took 276.1ms
q13b, predicted time: 287.1
q13b,(predicted 287.1),/*+ MergeJoin(it4 it5 pi1 k rt mii2 ci kt it1 mi1 t n mk an mii1 it3)
 MergeJoin(it4 it5 pi1 k rt mii2 ci kt it1 mi1 t n mk an mii1)
 MergeJoin(it5 pi1 k rt mii2 ci kt it1 mi1 t n mk an mii1)
 MergeJoin(it5 pi1 k rt mii2 ci kt it1 mi1 t n mk an)
 MergeJoin(pi1 k rt mii2 ci kt it1 mi1 t n mk an)
 MergeJoin(k rt mii2 ci kt it1 mi1 t n mk an)
 MergeJoin(rt mii2 ci kt it1 mi1 t n mk an)
 MergeJoin(mii2 ci kt it1 mi1 t n mk an)
 MergeJoin(ci kt it1 mi1 t n mk an)
 MergeJoin(ci kt it1 mi1 t n mk)
 MergeJoin(ci kt it1 mi1 t n)
 MergeJoin(ci kt it1 mi1 t)
 MergeJoin(kt it1 mi1 t)
 MergeJoin(it1 mi1 t)
 HashJoin(it1 mi1)
 SeqScan(it4)
 IndexScan(it5)
 SeqScan(pi1)
 IndexScan(k)
 SeqScan(rt)
 SeqScan(mii2)
 IndexScan(ci)
 SeqScan(kt)
 IndexScan(it1)
 IndexScan(mi1)
 IndexScan(t)
 SeqScan(n)
 IndexScan(mk)
 IndexScan(an)
 IndexScan(mii1)
 IndexScan(it3)
 Leading(((it4 ((it5 (pi1 (k (rt (mii2 ((((ci (kt ((it1 mi1) t))) n) mk) an)))))) mii1)) it3)) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Mono'))
AND (it1.id IN ('13'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('A4163','B6563','D1316','F6521','F6523','F6524','J5216','J5262','P3616'))
AND (ci.note IS NULL)
AND (rt.role in ('actor'))
AND (it5.id in ('32'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 3 5 4 3 4 5 3 4]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5  6  5  0  0  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.0610288e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 1.4285715e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.7080398e-04
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 7.0058941e-03 3.2351846e-03 8.3333336e-02
 1.3999696e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  113.76643293039817
Other difference exceed the threshold, need to switch module.
the difference value is:  113.76643293039817
Hash difference exceed the threshold, need to switch module.
the difference value is:  113.76643293039817
Nested loop difference exceed the threshold, need to switch module.
Planning took 1204.9ms
q13c, predicted time: 3074.5
q13c,(predicted 3074.5),/*+ NestLoop(pi1 kt t k mk ci n rt an mi1 mii1 mii2 it4 it3 it5 it1)
 NestLoop(pi1 kt t k mk ci n rt an mi1 mii1 mii2 it4 it3 it5)
 NestLoop(pi1 kt t k mk ci n rt an mi1 mii1 mii2 it4 it3)
 NestLoop(pi1 kt t k mk ci n rt an mi1 mii1 mii2 it4)
 NestLoop(pi1 kt t k mk ci n rt an mi1 mii1 mii2)
 NestLoop(pi1 kt t k mk ci n rt an mi1 mii1)
 NestLoop(pi1 kt t k mk ci n rt an mi1)
 NestLoop(pi1 kt t k mk ci n rt an)
 HashJoin(pi1 kt t k mk ci n rt)
 NestLoop(kt t k mk ci n rt)
 NestLoop(kt t k mk ci n)
 HashJoin(kt t k mk ci)
 NestLoop(t k mk ci)
 HashJoin(t k mk)
 HashJoin(k mk)
 IndexScan(pi1)
 IndexScan(kt)
 SeqScan(t)
 IndexScan(k)
 IndexScan(mk)
 IndexScan(ci)
 IndexScan(n)
 IndexScan(rt)
 IndexScan(an)
 IndexScan(mi1)
 IndexScan(mii1)
 IndexScan(mii2)
 IndexScan(it4)
 IndexScan(it3)
 IndexScan(it5)
 IndexScan(it1)
 Leading((((((((((pi1 (((kt ((t (k mk)) ci)) n) rt)) an) mi1) mii1) mii2) it4) it3) it5) it1)) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND mii2.movie_id = mii1.movie_id
AND mi1.movie_id = mii1.movie_id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 1990)
AND (t.production_year >= 1950)
AND (mi1.info IN ('OFM:35 mm','PCS:Spherical','PFM:35 mm','PFM:Video','RAT:1.33 : 1','RAT:1.37 : 1'))
AND (it1.id IN ('15','7','98'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 11.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 7.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 1000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND an.person_id = pi1.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('B6514','D1352','J5163','J5245','M2423','M6126','M6241','M6245','M6252','P3614','V2361','W4125','W4525'))
AND (ci.note in ('(executive producer)') OR ci.note IS NULL)
AND (rt.role in ('actor','producer'))
AND (it5.id in ('19'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 5 5 4 3 4 3]
indexes_env_matrix for this sql:  [ 1  2 27  2  3 26  3  4 25  4  5  6  5  0  0  6  7 24  7  8 23  8  9 22
  9 10 21 10 11 20 11 12 19 12 13 18 13 14 17 14 15 16 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.1726785e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 0.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.1657541e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 0.0000000e+00 0.0000000e+00 4.1180653e-03 2.8182682e-02 1.6666667e-01
 2.1578270e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  88.68649660428798
the difference value is:  88.68649660428798
the difference value is:  88.68649660428798
Planning took 228.4ms
q14a, predicted time: 255.9
q14a,(predicted 255.9),/*+ MergeJoin(it4 it3 it5 it1 pi1 kt mi1 t rt ci an n mii1 mii2)
 MergeJoin(it3 it5 it1 pi1 kt mi1 t rt ci an n mii1 mii2)
 MergeJoin(it3 it5 it1 pi1 kt mi1 t rt ci an n mii1)
 MergeJoin(it5 it1 pi1 kt mi1 t rt ci an n mii1)
 MergeJoin(it5 it1 pi1 kt mi1 t rt ci an n)
 MergeJoin(it1 pi1 kt mi1 t rt ci an n)
 MergeJoin(pi1 kt mi1 t rt ci an n)
 MergeJoin(kt mi1 t rt ci an n)
 MergeJoin(mi1 t rt ci an n)
 MergeJoin(t rt ci an n)
 MergeJoin(t rt ci an)
 MergeJoin(rt ci an)
 HashJoin(rt ci)
 SeqScan(it4)
 SeqScan(it3)
 SeqScan(it5)
 IndexScan(it1)
 SeqScan(pi1)
 SeqScan(kt)
 SeqScan(mi1)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(ci)
 IndexScan(an)
 SeqScan(n)
 IndexScan(mii1)
 IndexScan(mii2)
 Leading((it4 ((it3 ((it5 (it1 (pi1 (kt (mi1 ((t ((rt ci) an)) n)))))) mii1)) mii2))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND mii2.movie_id = mii1.movie_id
AND mi1.movie_id = mii1.movie_id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 1990)
AND (t.production_year >= 1950)
AND (mi1.info IN ('OFM:35 mm','PCS:Spherical','PFM:35 mm','PFM:Video','RAT:1.33 : 1','RAT:1.37 : 1'))
AND (it1.id IN ('15','7','98'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 11.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 7.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 1000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND an.person_id = pi1.person_id
AND rt.id = ci.role_id
AND (n.gender in ('f') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('B6514','D1352','J5163','J5245','M2423','M6126','M6241','M6245','M6252','P3614','V2361','W4125','W4525'))
AND (ci.note in ('(executive producer)') OR ci.note IS NULL)
AND (rt.role in ('actress','producer'))
AND (it5.id in ('19'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 5 5 4 3 4 3]
indexes_env_matrix for this sql:  [ 1  2 27  2  3 26  3  4 25  4  5  6  5  0  0  6  7 24  7  8 23  8  9 22
  9 10 21 10 11 20 11 12 19 12 13 18 13 14 17 14 15 16 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.1726785e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 0.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.1657541e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 0.0000000e+00 0.0000000e+00 3.3391793e-03 2.8182682e-02 1.6666667e-01
 2.1578270e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  96.10264716421791
the difference value is:  96.10264716421791
the difference value is:  96.10264716421791
Planning took 1866.9ms
q14b, predicted time: 741.4
q14b,(predicted 741.4),/*+ HashJoin(it3 it1 mi1 an kt it4 it5 rt pi1 n ci t mii1 mii2)
 HashJoin(it1 mi1 an kt it4 it5 rt pi1 n ci t mii1 mii2)
 HashJoin(mi1 an kt it4 it5 rt pi1 n ci t mii1 mii2)
 HashJoin(an kt it4 it5 rt pi1 n ci t mii1 mii2)
 HashJoin(kt it4 it5 rt pi1 n ci t mii1 mii2)
 HashJoin(it4 it5 rt pi1 n ci t mii1 mii2)
 HashJoin(it5 rt pi1 n ci t mii1 mii2)
 HashJoin(rt pi1 n ci t mii1 mii2)
 HashJoin(pi1 n ci t mii1 mii2)
 HashJoin(n ci t mii1 mii2)
 HashJoin(ci t mii1 mii2)
 HashJoin(t mii1 mii2)
 HashJoin(mii1 mii2)
 SeqScan(it3)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(an)
 SeqScan(kt)
 SeqScan(it4)
 SeqScan(it5)
 SeqScan(rt)
 SeqScan(pi1)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(t)
 IndexScan(mii1)
 IndexScan(mii2)
 Leading((it3 (it1 (mi1 (an (kt (it4 (it5 (rt (pi1 (n (ci (t (mii1 mii2)))))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND mii2.movie_id = mii1.movie_id
AND mi1.movie_id = mii1.movie_id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 1990)
AND (t.production_year >= 1950)
AND (mi1.info IN ('OFM:35 mm','PCS:Spherical','PFM:35 mm','PFM:Video','RAT:1.33 : 1','RAT:1.37 : 1'))
AND (it1.id IN ('15','7','98'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 11.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 7.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 1000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND an.person_id = pi1.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('M2423','M6126','M6241','M6245','M6252','P3614','V2361','W4125','W4525'))
AND (ci.note in ('(executive producer)') OR ci.note IS NULL)
AND (rt.role in ('actor','producer'))
AND (it5.id in ('19'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 5 5 4 3 4 3]
indexes_env_matrix for this sql:  [ 1  2 27  2  3 26  3  4 25  4  5  6  5  0  0  6  7 24  7  8 23  8  9 22
  9 10 21 10 11 20 11 12 19 12 13 18 13 14 17 14 15 16 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.1726785e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 0.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.1657541e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 0.0000000e+00 0.0000000e+00 2.3354581e-03 2.8182682e-02 1.6666667e-01
 2.1578270e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  88.68648314793093
the difference value is:  88.68648314793093
the difference value is:  88.68648314793093
Planning took 229.9ms
q14c, predicted time: 256.1
q14c,(predicted 256.1),/*+ MergeJoin(it4 it3 it5 it1 pi1 kt mi1 t rt ci an n mii1 mii2)
 MergeJoin(it3 it5 it1 pi1 kt mi1 t rt ci an n mii1 mii2)
 MergeJoin(it3 it5 it1 pi1 kt mi1 t rt ci an n mii1)
 MergeJoin(it5 it1 pi1 kt mi1 t rt ci an n mii1)
 MergeJoin(it5 it1 pi1 kt mi1 t rt ci an n)
 MergeJoin(it1 pi1 kt mi1 t rt ci an n)
 MergeJoin(pi1 kt mi1 t rt ci an n)
 MergeJoin(kt mi1 t rt ci an n)
 MergeJoin(mi1 t rt ci an n)
 MergeJoin(t rt ci an n)
 MergeJoin(t rt ci an)
 MergeJoin(rt ci an)
 HashJoin(rt ci)
 SeqScan(it4)
 SeqScan(it3)
 SeqScan(it5)
 IndexScan(it1)
 SeqScan(pi1)
 SeqScan(kt)
 SeqScan(mi1)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(ci)
 IndexScan(an)
 SeqScan(n)
 IndexScan(mii1)
 IndexScan(mii2)
 Leading((it4 ((it3 ((it5 (it1 (pi1 (kt (mi1 ((t ((rt ci) an)) n)))))) mii1)) mii2))) */
---------------------------------------
sql_str:  SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t WHERE ci.note  in ('(producer)', '(executive producer)') AND it1.info  = 'budget' AND it2.info  = 'votes' AND n.gender  = 'm' and n.name like '%Tim%' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 0 1 0 3 3 4 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 13  2  3 12  3  4 11  4  5 10  5  6  9  6  7  8  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0]
query_enc_matrix for this sql:  [0.         0.06764824 0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         0.         0.         0.         0.
 1.         0.         0.         1.         0.         0.
 0.         0.         0.         0.00419797 0.         0.
 1.         0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  18.37810908173053
the difference value is:  18.37810908173053
the difference value is:  18.37810908173053
Planning took 89.1ms
q15a, predicted time: 2474.7
q15a,(predicted 2474.7),/*+ NestLoop(it2 mi it1 ci n t mi_idx)
 NestLoop(mi it1 ci n t mi_idx)
 NestLoop(mi it1 ci n t)
 NestLoop(mi it1 ci n)
 NestLoop(mi it1 ci)
 HashJoin(mi it1)
 SeqScan(it2)
 IndexScan(mi)
 IndexScan(it1)
 IndexScan(ci)
 IndexScan(n)
 IndexScan(t)
 IndexScan(mi_idx)
 Leading((it2 (((((mi it1) ci) n) t) mi_idx))) */
---------------------------------------
sql_str:  SELECT MAX(mi.info) AS movie_budget, MAX(mi_idx.info) AS movie_votes, MAX(t.title) AS movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t WHERE ci.note  in ('(producer)', '(executive producer)') AND it1.info  = 'budget' AND it2.info  = 'votes' AND n.gender  = 'm' and n.name like '%Tim%' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 0 1 0 3 3 4 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 13  2  3 12  3  4 11  4  5 10  5  6  9  6  7  8  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0]
query_enc_matrix for this sql:  [0.         0.06764824 0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         0.         0.         0.         0.
 1.         0.         0.         1.         0.         0.
 0.         0.         0.         0.00419797 0.         0.
 1.         0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  36.53594102634441
the difference value is:  36.53594102634441
the difference value is:  36.53594102634441
Planning took 127.3ms
q15b, predicted time: 20.0
q15b,(predicted 20.0),/*+ HashJoin(t it2 mi_idx n ci it1 mi)
 HashJoin(it2 mi_idx n ci it1 mi)
 HashJoin(mi_idx n ci it1 mi)
 HashJoin(n ci it1 mi)
 HashJoin(ci it1 mi)
 HashJoin(it1 mi)
 SeqScan(t)
 IndexScan(it2)
 SeqScan(mi_idx)
 SeqScan(n)
 SeqScan(ci)
 IndexScan(it1)
 IndexScan(mi)
 Leading((t (it2 (mi_idx (n (ci (it1 mi))))))) */
---------------------------------------
sql_str:  SELECT MIN(chn.name) AS character_name, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_hero_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, info_type AS it2, keyword AS k, kind_type AS kt, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind  = 'cast' AND cct2.kind  like '%complete%' AND chn.name  is not NULL and (chn.name like '%man%' or chn.name like '%Man%') AND it2.info  = 'rating' AND k.keyword  in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND kt.kind  = 'movie' AND t.production_year  > 2000 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id AND it2.id = mi_idx.info_type_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 3 1 1 3 1 1 3 1 1 3 4 4 4 4 4 4 5 3]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6  7  6  0  0  7  8 19  8  9 10
  9  0  0 10 11 18 11 12 13 12  0  0 13 14 17 14 15 16 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 4.0098857e-02 2.5000000e-01 2.5000000e-01
 0.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 7.4532312e-05
 1.4285715e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 5.4074419e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  79.63714575362933
the difference value is:  79.63714575362933
the difference value is:  79.63714575362933
Planning took 1858.2ms
q16a, predicted time: 7547.6
q16a,(predicted 7547.6),/*+ NestLoop(n cct2 cct1 cc chn ci mi_idx it2 t kt mk k)
 NestLoop(n cct2 cct1 cc chn ci mi_idx it2 t kt mk)
 NestLoop(n cct2 cct1 cc chn ci mi_idx it2 t kt)
 NestLoop(n cct2 cct1 cc chn ci mi_idx it2 t)
 HashJoin(n cct2 cct1 cc chn ci mi_idx it2)
 HashJoin(cct2 cct1 cc chn ci mi_idx it2)
 HashJoin(cct1 cc chn ci mi_idx it2)
 HashJoin(cc chn ci mi_idx it2)
 HashJoin(chn ci mi_idx it2)
 HashJoin(ci mi_idx it2)
 HashJoin(mi_idx it2)
 SeqScan(n)
 SeqScan(cct2)
 SeqScan(cct1)
 SeqScan(cc)
 SeqScan(chn)
 SeqScan(ci)
 SeqScan(mi_idx)
 IndexScan(it2)
 IndexScan(t)
 SeqScan(kt)
 IndexScan(mk)
 IndexScan(k)
 Leading((((((n (cct2 (cct1 (cc (chn (ci (mi_idx it2))))))) t) kt) mk) k)) */
---------------------------------------
sql_str:  SELECT MAX(chn.name) AS character_name, MAX(mi_idx.info) AS rating, MAX(t.title) AS complete_hero_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, info_type AS it2, keyword AS k, kind_type AS kt, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind  = 'cast' AND cct2.kind  like '%complete%' AND chn.name  is not NULL and (chn.name like '%man%' or chn.name like '%Man%') AND it2.info  = 'rating' AND k.keyword  in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND kt.kind  = 'movie' AND t.production_year  > 2000 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id AND it2.id = mi_idx.info_type_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 3 1 1 3 1 1 3 1 1 3 4 4 4 4 4 4 5 3]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6  7  6  0  0  7  8 19  8  9 10
  9  0  0 10 11 18 11 12 13 12  0  0 13 14 17 14 15 16 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 4.0098857e-02 2.5000000e-01 2.5000000e-01
 0.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 7.4532312e-05
 1.4285715e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 5.4074419e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  63.92878457939328
the difference value is:  63.92878457939328
the difference value is:  63.92878457939328
Planning took 972.4ms
q16b, predicted time: 6.3
q16b,(predicted 6.3),/*+ HashJoin(chn kt t k cct2 it2 cct1 mk cc n ci mi_idx)
 HashJoin(kt t k cct2 it2 cct1 mk cc n ci mi_idx)
 HashJoin(t k cct2 it2 cct1 mk cc n ci mi_idx)
 HashJoin(k cct2 it2 cct1 mk cc n ci mi_idx)
 HashJoin(cct2 it2 cct1 mk cc n ci mi_idx)
 HashJoin(it2 cct1 mk cc n ci mi_idx)
 HashJoin(cct1 mk cc n ci mi_idx)
 HashJoin(mk cc n ci mi_idx)
 HashJoin(cc n ci mi_idx)
 HashJoin(n ci mi_idx)
 HashJoin(ci mi_idx)
 SeqScan(chn)
 IndexScan(kt)
 SeqScan(t)
 SeqScan(k)
 IndexScan(cct2)
 IndexScan(it2)
 SeqScan(cct1)
 SeqScan(mk)
 SeqScan(cc)
 SeqScan(n)
 IndexScan(ci)
 SeqScan(mi_idx)
 Leading((chn (kt (t (k (cct2 (it2 (cct1 (mk (cc (n (ci mi_idx)))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('tv movie','video movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Italy','Japan','Nigeria','Spain','West Germany'))
AND (it1.id IN ('8'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 8.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 1000.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('f'))
AND (n.name_pcode_nf in ('C6235','E4213') OR n.name_pcode_nf IS NULL)
AND (ci.note IS NULL)
AND (rt.role in ('actress'))
AND (it5.id in ('25'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 3 5 4 3 4 5 3 4]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5  6  5  0  0  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.0610288e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 9.5526205e-04
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 7.5621037e-03 1.4424813e-01 8.3333336e-02
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  114.64783485844038
Other difference exceed the threshold, need to switch module.
the difference value is:  114.64783485844038
Hash difference exceed the threshold, need to switch module.
the difference value is:  114.64783485844038
Nested loop difference exceed the threshold, need to switch module.
Planning took 948.6ms
q17a, predicted time: 2172.2
q17a,(predicted 2172.2),/*+ NestLoop(it3 mii2 it1 it5 pi1 n ci k mk t kt mi1 rt an it4 mii1)
 NestLoop(mii2 it1 it5 pi1 n ci k mk t kt mi1 rt an it4 mii1)
 NestLoop(mii2 it1 it5 pi1 n ci k mk t kt mi1 rt an it4)
 NestLoop(mii2 it1 it5 pi1 n ci k mk t kt mi1 rt an)
 NestLoop(mii2 it1 it5 pi1 n ci k mk t kt mi1 rt)
 HashJoin(mii2 it1 it5 pi1 n ci k mk t kt mi1)
 HashJoin(it1 it5 pi1 n ci k mk t kt mi1)
 HashJoin(it5 pi1 n ci k mk t kt mi1)
 HashJoin(it5 pi1 n ci k mk t kt)
 HashJoin(pi1 n ci k mk t kt)
 HashJoin(n ci k mk t kt)
 HashJoin(n ci k mk t)
 HashJoin(ci k mk t)
 NestLoop(k mk t)
 HashJoin(k mk)
 SeqScan(it3)
 SeqScan(mii2)
 SeqScan(it1)
 SeqScan(it5)
 SeqScan(pi1)
 SeqScan(n)
 SeqScan(ci)
 IndexScan(k)
 IndexScan(mk)
 IndexScan(t)
 IndexScan(kt)
 IndexScan(mi1)
 IndexScan(rt)
 IndexScan(an)
 SeqScan(it4)
 IndexScan(mii1)
 Leading((it3 (((((mii2 (it1 ((it5 (pi1 ((n (ci ((k mk) t))) kt))) mi1))) rt) an) it4) mii1))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('tv movie','video movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Italy','Japan','Nigeria','Spain','West Germany'))
AND (it1.id IN ('8'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 8.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 1000.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m'))
AND (n.name_pcode_nf in ('C6235','E4213') OR n.name_pcode_nf IS NULL)
AND (ci.note IS NULL)
AND (rt.role in ('actor'))
AND (it5.id in ('25'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 3 5 4 3 4 5 3 4]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5  6  5  0  0  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.0610288e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 9.5526205e-04
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.3330082e-02 1.4424813e-01 8.3333336e-02
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  109.90263968793212
Other difference exceed the threshold, need to switch module.
the difference value is:  109.90263968793212
Hash difference exceed the threshold, need to switch module.
the difference value is:  109.90263968793212
Nested loop difference exceed the threshold, need to switch module.
Planning took 830.2ms
q17b, predicted time: 341.1
q17b,(predicted 341.1),/*+ MergeJoin(mii1 pi1 an n ci t rt kt mk mii2 it4 k mi1 it3 it5 it1)
 MergeJoin(mii1 pi1 an n ci t rt kt mk mii2 it4 k mi1 it3 it5)
 MergeJoin(mii1 pi1 an n ci t rt kt mk mii2 it4 k mi1 it3)
 MergeJoin(mii1 pi1 an n ci t rt kt mk mii2 it4 k mi1)
 MergeJoin(mii1 pi1 an n ci t rt kt mk mii2 it4 k)
 MergeJoin(pi1 an n ci t rt kt mk mii2 it4 k)
 MergeJoin(pi1 an n ci t rt kt mk mii2 it4)
 MergeJoin(pi1 an n ci t rt kt mk mii2)
 MergeJoin(pi1 an n ci t rt kt mk)
 MergeJoin(pi1 an n ci t rt kt)
 MergeJoin(pi1 an n ci t rt)
 MergeJoin(an n ci t rt)
 MergeJoin(n ci t rt)
 MergeJoin(ci t rt)
 HashJoin(ci t)
 IndexScan(mii1)
 SeqScan(pi1)
 IndexScan(an)
 IndexScan(n)
 IndexScan(ci)
 IndexScan(t)
 SeqScan(rt)
 IndexScan(kt)
 SeqScan(mk)
 IndexScan(mii2)
 IndexScan(it4)
 SeqScan(k)
 SeqScan(mi1)
 IndexScan(it3)
 SeqScan(it5)
 IndexScan(it1)
 Leading((((((mii1 ((((((pi1 (an (n ((ci t) rt)))) kt) mk) mii2) it4) k)) mi1) it3) it5) it1)) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('tv movie','video movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Italy','Japan','China','West Germany'))
AND (it1.id IN ('8'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 8.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 1000.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('f'))
AND (n.name_pcode_nf in ('C6235','E4213') OR n.name_pcode_nf IS NULL)
AND (ci.note IS NULL)
AND (rt.role in ('actress'))
AND (it5.id in ('25'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 3 5 4 3 4 5 3 4]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5  6  5  0  0  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.0610288e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2760687e-04
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 7.5621037e-03 1.4424813e-01 8.3333336e-02
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  114.64783438342437
Other difference exceed the threshold, need to switch module.
the difference value is:  114.64783438342437
Hash difference exceed the threshold, need to switch module.
the difference value is:  114.64783438342437
Nested loop difference exceed the threshold, need to switch module.
Planning took 759.4ms
q17c, predicted time: 2184.2
q17c,(predicted 2184.2),/*+ NestLoop(it3 mii2 it1 it5 pi1 n ci k mk t kt mi1 rt an it4 mii1)
 NestLoop(mii2 it1 it5 pi1 n ci k mk t kt mi1 rt an it4 mii1)
 NestLoop(mii2 it1 it5 pi1 n ci k mk t kt mi1 rt an it4)
 NestLoop(mii2 it1 it5 pi1 n ci k mk t kt mi1 rt an)
 NestLoop(mii2 it1 it5 pi1 n ci k mk t kt mi1 rt)
 HashJoin(mii2 it1 it5 pi1 n ci k mk t kt mi1)
 HashJoin(it1 it5 pi1 n ci k mk t kt mi1)
 HashJoin(it5 pi1 n ci k mk t kt mi1)
 HashJoin(it5 pi1 n ci k mk t kt)
 HashJoin(pi1 n ci k mk t kt)
 HashJoin(pi1 n ci k mk t)
 HashJoin(n ci k mk t)
 HashJoin(ci k mk t)
 NestLoop(k mk t)
 HashJoin(k mk)
 SeqScan(it3)
 SeqScan(mii2)
 SeqScan(it1)
 SeqScan(it5)
 SeqScan(pi1)
 SeqScan(n)
 SeqScan(ci)
 IndexScan(k)
 IndexScan(mk)
 IndexScan(t)
 IndexScan(kt)
 IndexScan(mi1)
 IndexScan(rt)
 IndexScan(an)
 SeqScan(it4)
 IndexScan(mii1)
 Leading((it3 (((((mii2 (it1 ((it5 ((pi1 (n (ci ((k mk) t)))) kt)) mi1))) rt) an) it4) mii1))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Buenos Aires, Federal District, Argentina','Los Angeles, California, USA','Mexico','New York City, New York, USA','Paramount Studios - 5555 Melrose Avenue, Hollywood, Los Angeles, California, USA'))
AND (it1.id IN ('18'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('D2313','E3261','G625','J5141','K1524','L2125','M2563','M265','M3215','P3625','S5326','S6256','T5252'))
AND (ci.note in ('(writer)') OR ci.note IS NULL)
AND (rt.role in ('actor','director','writer'))
AND (it5.id in ('31'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 4 3 5 3 4 3 3 4 5]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5 28  5  6 27  6  7 26  7  8 25  8  9 24
  9 10 23 10 11 22 11 12 21 12 13 20 13 14 19 14 15 18 15 16 17 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.1365104e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 2.2681744e-04
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.2687512e-03 2.2678010e-03 2.5000000e-01
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  107.944990437497
Other difference exceed the threshold, need to switch module.
the difference value is:  107.944990437497
Hash difference exceed the threshold, need to switch module.
the difference value is:  107.944990437497
Nested loop difference exceed the threshold, need to switch module.
Planning took 439.3ms
q18a, predicted time: 31.5
q18a,(predicted 31.5),/*+ HashJoin(it4 it3 an mii2 it5 pi1 kt mii1 it1 mi1 k n mk rt ci t)
 HashJoin(it3 an mii2 it5 pi1 kt mii1 it1 mi1 k n mk rt ci t)
 HashJoin(an mii2 it5 pi1 kt mii1 it1 mi1 k n mk rt ci t)
 HashJoin(mii2 it5 pi1 kt mii1 it1 mi1 k n mk rt ci t)
 HashJoin(it5 pi1 kt mii1 it1 mi1 k n mk rt ci t)
 HashJoin(pi1 kt mii1 it1 mi1 k n mk rt ci t)
 HashJoin(kt mii1 it1 mi1 k n mk rt ci t)
 HashJoin(mii1 it1 mi1 k n mk rt ci t)
 HashJoin(it1 mi1 k n mk rt ci t)
 HashJoin(mi1 k n mk rt ci t)
 HashJoin(k n mk rt ci t)
 HashJoin(n mk rt ci t)
 HashJoin(mk rt ci t)
 HashJoin(rt ci t)
 HashJoin(ci t)
 SeqScan(it4)
 SeqScan(it3)
 SeqScan(an)
 SeqScan(mii2)
 SeqScan(it5)
 SeqScan(pi1)
 SeqScan(kt)
 SeqScan(mii1)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(k)
 SeqScan(n)
 SeqScan(mk)
 SeqScan(rt)
 IndexScan(ci)
 IndexScan(t)
 Leading((it4 (it3 (an (mii2 (it5 (pi1 (kt (mii1 (it1 (mi1 (k (n (mk (rt (ci t)))))))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Buenos Aires, Federal District, Argentina','Los Angeles, California, USA','Mexico','New York City, New York, USA','Paramount Studios - 5555 Melrose Avenue, Hollywood, Los Angeles, California, USA'))
AND (it1.id IN ('18'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('D2313','E3261','G625','J5141','K1524','L2125','M2563','M265','M3215','P3625','S5326','S6256','T5252'))
AND (ci.note in ('(writer)') OR ci.note IS NULL)
AND (rt.role in ('actor','director','writer'))
AND (it5.id in ('31'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 3 5 4 3 4 5 3 4]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5  6  5  0  0  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.1365104e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 1.4285715e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 2.2681744e-04
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.2687512e-03 2.2678010e-03 2.5000000e-01
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  114.63196475545348
Other difference exceed the threshold, need to switch module.
the difference value is:  114.63196475545348
Hash difference exceed the threshold, need to switch module.
the difference value is:  114.63196475545348
Nested loop difference exceed the threshold, need to switch module.
Planning took 474.8ms
q18c, predicted time: 6508.8
q18c,(predicted 6508.8),/*+ NestLoop(it4 kt mii2 it1 mi1 it5 pi1 an n ci t k mk rt mii1 it3)
 HashJoin(it4 kt mii2 it1 mi1 it5 pi1 an n ci t k mk rt mii1)
 NestLoop(kt mii2 it1 mi1 it5 pi1 an n ci t k mk rt mii1)
 HashJoin(kt mii2 it1 mi1 it5 pi1 an n ci t k mk rt)
 HashJoin(mii2 it1 mi1 it5 pi1 an n ci t k mk rt)
 NestLoop(it1 mi1 it5 pi1 an n ci t k mk rt)
 HashJoin(it1 mi1 it5 pi1 an n ci t k mk)
 HashJoin(mi1 it5 pi1 an n ci t k mk)
 HashJoin(it5 pi1 an n ci t k mk)
 HashJoin(pi1 an n ci t k mk)
 HashJoin(an n ci t k mk)
 HashJoin(n ci t k mk)
 HashJoin(ci t k mk)
 HashJoin(t k mk)
 HashJoin(k mk)
 IndexScan(it4)
 SeqScan(kt)
 SeqScan(mii2)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(it5)
 SeqScan(pi1)
 SeqScan(an)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(t)
 IndexScan(k)
 IndexScan(mk)
 IndexScan(rt)
 IndexScan(mii1)
 IndexScan(it3)
 Leading(((it4 ((kt (mii2 ((it1 (mi1 (it5 (pi1 (an (n (ci (t (k mk))))))))) rt))) mii1)) it3)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('production designer'))
AND (n.gender in ('f'))
AND (t.production_year <= 2010)
AND (t.production_year >= 1950)
AND (k.keyword IN ('death','father-son-relationship','fight','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.7079076e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.3576464e-01 0.0000000e+00 8.3333336e-02
 7.5073051e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  54.20976653225883
the difference value is:  54.20976653225883
the difference value is:  54.20976653225883
Planning took 358.2ms
q19a, predicted time: 6.3
q19a,(predicted 6.3),/*+ HashJoin(kt it2 it1 k mk mi1 mi2 t rt n ci)
 HashJoin(it2 it1 k mk mi1 mi2 t rt n ci)
 HashJoin(it1 k mk mi1 mi2 t rt n ci)
 HashJoin(k mk mi1 mi2 t rt n ci)
 HashJoin(mk mi1 mi2 t rt n ci)
 HashJoin(mi1 mi2 t rt n ci)
 HashJoin(mi2 t rt n ci)
 HashJoin(t rt n ci)
 HashJoin(rt n ci)
 HashJoin(n ci)
 SeqScan(kt)
 SeqScan(it2)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(mi1)
 SeqScan(mi2)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(n)
 IndexScan(ci)
 Leading((kt (it2 (it1 (k (mk (mi1 (mi2 (t (rt (n ci))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('production designer'))
AND (n.gender in ('f'))
AND (t.production_year <= 2020)
AND (t.production_year >= 1950)
AND (k.keyword IN ('death','father-son-relationship','fight','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.7079076e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.3576464e-01 0.0000000e+00 8.3333336e-02
 9.0642136e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  64.33889082068174
the difference value is:  64.33889082068174
the difference value is:  64.33889082068174
Planning took 356.7ms
q19b, predicted time: 7054.9
q19b,(predicted 7054.9),/*+ HashJoin(it1 it2 mi1 mi2 rt kt ci t k mk n)
 HashJoin(it2 mi1 mi2 rt kt ci t k mk n)
 HashJoin(mi1 mi2 rt kt ci t k mk n)
 HashJoin(mi2 rt kt ci t k mk n)
 HashJoin(rt kt ci t k mk n)
 HashJoin(kt ci t k mk n)
 HashJoin(ci t k mk n)
 HashJoin(ci t k mk)
 HashJoin(t k mk)
 HashJoin(k mk)
 SeqScan(it1)
 SeqScan(it2)
 SeqScan(mi1)
 SeqScan(mi2)
 SeqScan(rt)
 SeqScan(kt)
 SeqScan(ci)
 SeqScan(t)
 IndexScan(k)
 IndexScan(mk)
 IndexScan(n)
 Leading((it1 (it2 (mi1 (mi2 (rt (kt ((ci (t (k mk))) n)))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('7'))
AND (mi1.info in ('MET:','OFM:35 mm','PCS:Digital Intermediate','PFM:35 mm','PFM:Video','RAT:1.33 : 1','RAT:1.37 : 1'))
AND (kt.kind in ('episode','movie','tv movie'))
AND (rt.role in ('actor','actress'))
AND (n.gender in ('f','m') OR n.gender IS NULL)
AND (n.name_pcode_cf in ('R1632','R2632','W4525'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1955)
AND (cn.name in ('Fox Network','Independent Television (ITV)','Metro-Goldwyn-Mayer (MGM)','National Broadcasting Company (NBC)','Paramount Pictures','Shout! Factory','Sony Pictures Home Entertainment','Universal Pictures','Universal TV'))
AND (ct.kind in ('distributors','production companies'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 0 1 1 1 0 1 0 1 3 4 3 4 3 4 3 4 3 4 5 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 4.2553736e-05 5.0000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 4.2857143e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 4.8991218e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.5763703e-03 0.0000000e+00 1.6666667e-01
 8.9440465e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  69.76581060989983
the difference value is:  69.76581060989983
the difference value is:  69.76581060989983
Planning took 398.5ms
q1b, predicted time: 21.4
q1b,(predicted 21.4),/*+ HashJoin(k mk it1 kt rt mi1 cn n ci t mc ct)
 HashJoin(mk it1 kt rt mi1 cn n ci t mc ct)
 HashJoin(it1 kt rt mi1 cn n ci t mc ct)
 HashJoin(kt rt mi1 cn n ci t mc ct)
 HashJoin(rt mi1 cn n ci t mc ct)
 HashJoin(mi1 cn n ci t mc ct)
 HashJoin(cn n ci t mc ct)
 HashJoin(n ci t mc ct)
 HashJoin(ci t mc ct)
 HashJoin(t mc ct)
 HashJoin(mc ct)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(it1)
 SeqScan(kt)
 SeqScan(rt)
 SeqScan(mi1)
 SeqScan(cn)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(t)
 SeqScan(mc)
 IndexScan(ct)
 Leading((k (mk (it1 (kt (rt (mi1 (cn (n (ci (t (mc ct)))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('7'))
AND (mi1.info in ('MET:','OFM:35 mm','PCS:Digital Intermediate','PFM:35 mm','PFM:Video','RAT:1.33 : 1','RAT:1.37 : 1'))
AND (kt.kind in ('episode','movie','tv movie'))
AND (rt.role in ('actor','actress'))
AND (n.gender in ('f','m') OR n.gender IS NULL)
AND (n.name_pcode_cf in ('A5362','J5252','R1632','R2632','W4525'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1956)
AND (cn.name in ('Independent Television (ITV)','Metro-Goldwyn-Mayer (MGM)','National Broadcasting Company (NBC)','Paramount Pictures','Shout! Factory','Sony Pictures Home Entertainment','Universal Pictures','Universal TV'))
AND (ct.kind in ('distributors','production companies'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 0 1 1 1 1 1 0 0 1 1 3 4 4 3 3 4 5 4 3 4 3 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 3.8298360e-05 5.0000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 4.2857143e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 4.8991218e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 7.4970769e-03 0.0000000e+00 1.6666667e-01
 8.9109492e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  77.58272135746043
the difference value is:  77.58272135746043
the difference value is:  77.58272135746043
Planning took 250.3ms
q1c, predicted time: 6123.0
q1c,(predicted 6123.0),/*+ NestLoop(ct cn mc n t k mk ci kt rt mi1 it1)
 HashJoin(ct cn mc n t k mk ci kt rt mi1)
 NestLoop(ct cn mc n t k mk ci kt rt)
 HashJoin(ct cn mc n t k mk ci kt)
 HashJoin(ct cn mc n t k mk ci)
 HashJoin(cn mc n t k mk ci)
 HashJoin(mc n t k mk ci)
 HashJoin(n t k mk ci)
 HashJoin(t k mk ci)
 HashJoin(t k mk)
 HashJoin(k mk)
 SeqScan(ct)
 SeqScan(cn)
 SeqScan(mc)
 SeqScan(n)
 SeqScan(t)
 IndexScan(k)
 IndexScan(mk)
 SeqScan(ci)
 IndexScan(kt)
 IndexScan(rt)
 SeqScan(mi1)
 IndexScan(it1)
 Leading((((((ct (cn (mc (n ((t (k mk)) ci))))) kt) rt) mi1) it1)) */
---------------------------------------
sql_str:  SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS kung_fu_panda FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, role_type AS rt, title AS t WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND cn.name  = 'DreamWorks Animation' AND it.info  = 'release dates' AND k.keyword  in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie') AND mi.info  is not null and (mi.info like 'Japan:%201%' or mi.info like 'USA:%201%') AND n.gender ='f' and n.name like '%An%' AND rt.role ='actress' AND t.production_year  > 2010 AND t.title like 'Kung Fu Panda%' AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mi.movie_id = ci.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id AND k.id = mk.keyword_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 5 4 4 4 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 2.3315500e-02 1.0000000e+00 0.0000000e+00 0.0000000e+00
 4.2553734e-06 0.0000000e+00 0.0000000e+00 8.8495575e-03 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 2.9812923e-05
 0.0000000e+00 0.0000000e+00 1.0000000e+00 1.0389991e-02 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 7.1443464e-03 0.0000000e+00 8.3333336e-02
 1.4634270e-05 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  65.57842212734317
the difference value is:  65.57842212734317
the difference value is:  65.57842212734317
Planning took 629.9ms
q20a, predicted time: 539.4
q20a,(predicted 539.4),/*+ MergeJoin(k n chn an cn mc mk it t rt ci mi)
 MergeJoin(n chn an cn mc mk it t rt ci mi)
 MergeJoin(chn an cn mc mk it t rt ci mi)
 MergeJoin(an cn mc mk it t rt ci mi)
 MergeJoin(cn mc mk it t rt ci mi)
 MergeJoin(mc mk it t rt ci mi)
 MergeJoin(mk it t rt ci mi)
 MergeJoin(it t rt ci mi)
 MergeJoin(t rt ci mi)
 NestLoop(rt ci mi)
 HashJoin(rt ci)
 SeqScan(k)
 IndexScan(n)
 IndexScan(chn)
 IndexScan(an)
 IndexScan(cn)
 SeqScan(mc)
 IndexScan(mk)
 SeqScan(it)
 SeqScan(t)
 SeqScan(rt)
 SeqScan(ci)
 IndexScan(mi)
 Leading((k (n (chn (an (cn (mc (mk (it (t ((rt ci) mi))))))))))) */
---------------------------------------
sql_str:  SELECT MAX(chn.name) AS voiced_char_name, MAX(n.name) AS voicing_actress_name, MAX(t.title) AS kung_fu_panda FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, role_type AS rt, title AS t WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND cn.name  = 'DreamWorks Animation' AND it.info  = 'release dates' AND k.keyword  in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie') AND mi.info  is not null and (mi.info like 'Japan:%201%' or mi.info like 'USA:%201%') AND n.gender ='f' and n.name like '%An%' AND rt.role ='actress' AND t.production_year  > 2010 AND t.title like 'Kung Fu Panda%' AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mi.movie_id = ci.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id AND k.id = mk.keyword_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 5 4 4 4 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 2.3315500e-02 1.0000000e+00 0.0000000e+00 0.0000000e+00
 4.2553734e-06 0.0000000e+00 0.0000000e+00 8.8495575e-03 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 2.9812923e-05
 0.0000000e+00 0.0000000e+00 1.0000000e+00 1.0389991e-02 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 7.1443464e-03 0.0000000e+00 8.3333336e-02
 1.4634270e-05 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  76.3585816252859
the difference value is:  76.3585816252859
the difference value is:  76.3585816252859
Planning took 213.3ms
q20b, predicted time: 419.0
q20b,(predicted 419.0),/*+ MergeJoin(k mk cn mc n chn ci mi it t rt an)
 MergeJoin(mk cn mc n chn ci mi it t rt an)
 MergeJoin(cn mc n chn ci mi it t rt an)
 MergeJoin(mc n chn ci mi it t rt an)
 MergeJoin(n chn ci mi it t rt an)
 MergeJoin(n chn ci mi it t rt)
 MergeJoin(chn ci mi it t rt)
 MergeJoin(ci mi it t rt)
 MergeJoin(ci mi it t)
 MergeJoin(mi it t)
 HashJoin(mi it)
 IndexScan(k)
 IndexScan(mk)
 SeqScan(cn)
 IndexScan(mc)
 IndexScan(n)
 IndexScan(chn)
 IndexScan(ci)
 IndexScan(mi)
 IndexScan(it)
 SeqScan(t)
 IndexScan(rt)
 IndexScan(an)
 Leading((k (mk (cn (mc ((n (chn ((ci ((mi it) t)) rt))) an)))))) */
---------------------------------------
sql_str:  SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS kung_fu_panda FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, role_type AS rt, title AS t WHERE ci.note  in ( '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND cn.name  = 'DreamWorks Animation' AND it.info  = 'release dates' AND k.keyword  in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie') AND mi.info  is not null and (mi.info like 'Japan:%201%' or mi.info like 'USA:%201%') AND n.gender ='f' and n.name like '%An%' AND rt.role ='actress' AND t.production_year  > 2010 AND t.title like 'Kung Fu Panda%' AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mi.movie_id = ci.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id AND k.id = mk.keyword_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 5 4 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 3.2641783e-03 1.0000000e+00 0.0000000e+00 0.0000000e+00
 4.2553734e-06 0.0000000e+00 0.0000000e+00 8.8495575e-03 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 2.9812923e-05
 0.0000000e+00 0.0000000e+00 1.0000000e+00 1.0389991e-02 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 7.1443464e-03 0.0000000e+00 8.3333336e-02
 1.4634270e-05 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  65.57789248129758
the difference value is:  65.57789248129758
the difference value is:  65.57789248129758
Planning took 679.9ms
q20c, predicted time: 571.2
q20c,(predicted 571.2),/*+ MergeJoin(k n chn an cn mc mk it t rt ci mi)
 MergeJoin(n chn an cn mc mk it t rt ci mi)
 MergeJoin(chn an cn mc mk it t rt ci mi)
 MergeJoin(an cn mc mk it t rt ci mi)
 MergeJoin(cn mc mk it t rt ci mi)
 MergeJoin(mc mk it t rt ci mi)
 MergeJoin(mk it t rt ci mi)
 MergeJoin(it t rt ci mi)
 MergeJoin(t rt ci mi)
 NestLoop(rt ci mi)
 HashJoin(rt ci)
 SeqScan(k)
 IndexScan(n)
 IndexScan(chn)
 IndexScan(an)
 IndexScan(cn)
 SeqScan(mc)
 IndexScan(mk)
 SeqScan(it)
 SeqScan(t)
 SeqScan(rt)
 SeqScan(ci)
 IndexScan(mi)
 Leading((k (n (chn (an (cn (mc (mk (it (t ((rt ci) mi))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('5'))
AND (it2.id in ('7'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('Argentina:Atp','Canada:G','Iceland:L','UK:X','USA:X'))
AND (mi2.info in ('OFM:35 mm','PFM:35 mm','RAT:1.33 : 1'))
AND (kt.kind in ('tv series','video movie'))
AND (rt.role in ('director','producer'))
AND (n.gender IS NULL)
AND (t.production_year <= 1975)
AND (t.production_year >= 1875)
AND (k.keyword IN ('based-on-play','dog','family-relationships','father-son-relationship','female-nudity','hardcore','husband-wife-relationship','independent-film','lesbian-sex','love','marriage','mother-daughter-relationship','nudity','one-word-title','police','sequel','sex','singer'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.3415815e-04
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.0751051e-05
 4.5687705e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 3.4863040e-01 0.0000000e+00 1.6666667e-01
 1.8108603e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  63.60589948541644
the difference value is:  63.60589948541644
the difference value is:  63.60589948541644
Planning took 1047.5ms
q21a, predicted time: 6536.0
q21a,(predicted 6536.0),/*+ NestLoop(mi1 it2 kt mi2 t it1 ci rt mk k n)
 NestLoop(mi1 it2 kt mi2 t it1 ci rt mk k)
 NestLoop(mi1 it2 kt mi2 t it1 ci rt mk)
 NestLoop(mi1 it2 kt mi2 t it1 ci rt)
 NestLoop(mi1 it2 kt mi2 t it1 ci)
 NestLoop(mi1 it2 kt mi2 t it1)
 HashJoin(mi1 it2 kt mi2 t)
 HashJoin(it2 kt mi2 t)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(mi1)
 SeqScan(it2)
 SeqScan(kt)
 IndexScan(mi2)
 SeqScan(t)
 IndexScan(it1)
 IndexScan(ci)
 SeqScan(rt)
 IndexScan(mk)
 IndexScan(k)
 IndexScan(n)
 Leading((((((((mi1 (it2 (kt (mi2 t)))) it1) ci) rt) mk) k) n)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('5'))
AND (it2.id in ('7'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('Argentina:Atp','Canada:G','Iceland:L','UK:X','USA:X'))
AND (mi2.info in ('OFM:35 mm','PFM:35 mm','RAT:1.33 : 1'))
AND (kt.kind in ('tv series','video movie'))
AND (rt.role in ('producer'))
AND (n.gender IS NULL)
AND (t.production_year <= 1975)
AND (t.production_year >= 1875)
AND (k.keyword IN ('based-on-play','dog','family-relationships','father-son-relationship','female-nudity','hardcore','husband-wife-relationship','independent-film','lesbian-sex','love','marriage','mother-daughter-relationship','nudity','one-word-title','police','sequel','sex','singer'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.3415815e-04
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.0751051e-05
 4.5687705e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 3.4863040e-01 0.0000000e+00 8.3333336e-02
 1.8108603e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  53.67880110718583
the difference value is:  53.67880110718583
the difference value is:  53.67880110718583
Planning took 768.9ms
q21c, predicted time: 7.7
q21c,(predicted 7.7),/*+ HashJoin(it2 rt n ci k kt mk it1 t mi2 mi1)
 HashJoin(rt n ci k kt mk it1 t mi2 mi1)
 HashJoin(n ci k kt mk it1 t mi2 mi1)
 HashJoin(ci k kt mk it1 t mi2 mi1)
 HashJoin(k kt mk it1 t mi2 mi1)
 HashJoin(kt mk it1 t mi2 mi1)
 HashJoin(mk it1 t mi2 mi1)
 HashJoin(it1 t mi2 mi1)
 HashJoin(t mi2 mi1)
 HashJoin(mi2 mi1)
 SeqScan(it2)
 SeqScan(rt)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(k)
 SeqScan(kt)
 SeqScan(mk)
 SeqScan(it1)
 SeqScan(t)
 SeqScan(mi2)
 IndexScan(mi1)
 Leading((it2 (rt (n (ci (k (kt (mk (it1 (t (mi2 mi1))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('3'))
AND (mi1.info in ('Adventure','Animation','Crime','Drama'))
AND (kt.kind in ('movie'))
AND (rt.role in ('actor','actress'))
AND (n.gender in ('f','m'))
AND (n.surname_pcode in ('C4','C62','C632','D5','F6','F63','G63','H2','L5','M245','S','S6'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1875)
AND (cn.name in ('Columbia Broadcasting System (CBS)','Metro-Goldwyn-Mayer (MGM)','Paramount Pictures','Pathé Frères','Universal Pictures','Warner Home Video'))
AND (ct.kind in ('distributors','production companies'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 0 1 1 1 1 1 1 0 1 1 3 4 4 3 4 4 5 4 3 4 3 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 2.9787614e-05 5.0000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 1.4285715e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 2.6909378e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.1934039e-02 0.0000000e+00 1.6666667e-01
 1.8108603e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  76.70350238621174
the difference value is:  76.70350238621174
the difference value is:  76.70350238621174
Planning took 219.3ms
q22a, predicted time: 3538.1
q22a,(predicted 3538.1),/*+ NestLoop(it1 kt ct cn mc t mi1 ci n rt mk k)
 NestLoop(it1 kt ct cn mc t mi1 ci n rt mk)
 NestLoop(it1 kt ct cn mc t mi1 ci n rt)
 NestLoop(it1 kt ct cn mc t mi1 ci n)
 NestLoop(it1 kt ct cn mc t mi1 ci)
 NestLoop(it1 kt ct cn mc t mi1)
 NestLoop(kt ct cn mc t mi1)
 NestLoop(ct cn mc t mi1)
 NestLoop(ct cn mc t)
 HashJoin(ct cn mc)
 HashJoin(cn mc)
 SeqScan(it1)
 SeqScan(kt)
 SeqScan(ct)
 IndexScan(cn)
 IndexScan(mc)
 IndexScan(t)
 IndexScan(mi1)
 IndexScan(ci)
 IndexScan(n)
 IndexScan(rt)
 IndexScan(mk)
 IndexScan(k)
 Leading(((((((it1 (kt (((ct (cn mc)) t) mi1))) ci) n) rt) mk) k)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('3'))
AND (mi1.info in ('Adventure','Animation','Crime','Drama'))
AND (kt.kind in ('movie'))
AND (rt.role in ('actor'))
AND (n.gender in ('m'))
AND (n.surname_pcode in ('F63','G63','H2','L5','M245','S','S6'))
AND (t.production_year <= 2000)
AND (t.production_year >= 1875)
AND (cn.name in ('Columbia Broadcasting System (CBS)','Metro-Goldwyn-Mayer (MGM)','Paramount Pictures','Pathé Frères','Universal Pictures','Warner Home Video'))
AND (ct.kind in ('distributors','production companies'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 0 1 0 1 0 1 3 4 3 4 3 4 3 4 3 4 4 5]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 2.9787614e-05 5.0000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 1.4285715e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 2.6909378e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 4.2212447e-03 0.0000000e+00 8.3333336e-02
 4.3246600e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  68.02196664428938
the difference value is:  68.02196664428938
the difference value is:  68.02196664428938
Planning took 274.7ms
q22b, predicted time: 84.8
q22b,(predicted 84.8),/*+ NestLoop(kt mk t mc ct mi1 it1 ci n cn k rt)
 NestLoop(kt mk t mc ct mi1 it1 ci n cn k)
 NestLoop(kt mk t mc ct mi1 it1 ci n cn)
 NestLoop(kt mk t mc ct mi1 it1 ci n)
 NestLoop(kt mk t mc ct mi1 it1 ci)
 NestLoop(kt mk t mc ct mi1 it1)
 NestLoop(kt mk t mc ct mi1)
 HashJoin(kt mk t mc ct)
 HashJoin(mk t mc ct)
 HashJoin(t mc ct)
 HashJoin(mc ct)
 SeqScan(kt)
 SeqScan(mk)
 SeqScan(t)
 SeqScan(mc)
 IndexScan(ct)
 IndexScan(mi1)
 SeqScan(it1)
 IndexScan(ci)
 IndexScan(n)
 IndexScan(cn)
 IndexScan(k)
 IndexScan(rt)
 Leading(((((((((kt (mk (t (mc ct)))) mi1) it1) ci) n) cn) k) rt)) */
---------------------------------------
sql_str:  SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS jap_engl_voiced_movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info  = 'release dates' AND n.gender ='f' AND rt.role ='actress' AND t.production_year  > 2000 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 0 1 1 0 3 1 3 4 4 4 3 5 4 4 5]
indexes_env_matrix for this sql:  [ 1  2 19  2  3 18  3  4 17  4  5 16  5  6 15  6  7 14  7  8 13  8  9 10
  9  0  0 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0]
query_enc_matrix for this sql:  [1.         0.0233155  1.         0.         0.         0.36416635
 0.         0.         0.00884956 0.         0.         0.
 0.         0.         0.         0.         0.         1.
 1.         0.         0.         0.         0.         0.
 0.         0.         0.         0.23576464 0.         0.08333334
 0.5407442  0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  57.80082920974661
the difference value is:  57.80082920974661
the difference value is:  57.80082920974661
Planning took 137.8ms
q23a, predicted time: 2297.7
q23a,(predicted 2297.7),/*+ NestLoop(n ci cn mc t chn mi it rt an)
 NestLoop(n ci cn mc t chn mi it rt)
 NestLoop(n ci cn mc t chn mi it)
 NestLoop(n ci cn mc t chn mi)
 MergeJoin(n ci cn mc t chn)
 NestLoop(n ci cn mc t)
 MergeJoin(n ci cn mc)
 HashJoin(ci cn mc)
 HashJoin(cn mc)
 IndexScan(n)
 SeqScan(ci)
 IndexScan(cn)
 IndexScan(mc)
 IndexScan(t)
 IndexScan(chn)
 IndexScan(mi)
 SeqScan(it)
 IndexScan(rt)
 IndexScan(an)
 Leading((((((((n (ci (cn mc))) t) chn) mi) it) rt) an)) */
---------------------------------------
sql_str:  SELECT MAX(n.name) AS voicing_actress, MAX(t.title) AS jap_engl_voiced_movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info  = 'release dates' AND n.gender ='f' AND rt.role ='actress' AND t.production_year  > 2000 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 0 1 1 0 3 1 3 4 4 4 3 5 4 4 5]
indexes_env_matrix for this sql:  [ 1  2 19  2  3 18  3  4 17  4  5 16  5  6 15  6  7 14  7  8 13  8  9 10
  9  0  0 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0]
query_enc_matrix for this sql:  [1.         0.0233155  1.         0.         0.         0.36416635
 0.         0.         0.00884956 0.         0.         0.
 0.         0.         0.         0.         0.         1.
 1.         0.         0.         0.         0.         0.
 0.         0.         0.         0.23576464 0.         0.08333334
 0.5407442  0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  44.047126839407284
the difference value is:  44.047126839407284
the difference value is:  44.047126839407284
Planning took 214.8ms
q23b, predicted time: 11.3
q23b,(predicted 11.3),/*+ HashJoin(chn rt it an n t ci cn mc mi)
 HashJoin(rt it an n t ci cn mc mi)
 HashJoin(it an n t ci cn mc mi)
 HashJoin(an n t ci cn mc mi)
 HashJoin(an n t ci cn mc)
 HashJoin(n t ci cn mc)
 HashJoin(t ci cn mc)
 HashJoin(ci cn mc)
 HashJoin(cn mc)
 SeqScan(chn)
 IndexScan(rt)
 SeqScan(it)
 SeqScan(an)
 SeqScan(n)
 SeqScan(t)
 SeqScan(ci)
 IndexScan(cn)
 SeqScan(mc)
 SeqScan(mi)
 Leading((chn (rt (it ((an (n (t (ci (cn mc))))) mi))))) */
---------------------------------------
sql_str:  SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS jap_engl_voiced_movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t WHERE ci.note  in ( '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info  = 'release dates' AND n.gender ='f' AND rt.role ='actress' AND t.production_year  > 2000 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 0 1 1 1 0 0 3 3 1 3 4 4 4 4 3 5 5]
indexes_env_matrix for this sql:  [ 1  2 19  2  3 18  3  4 17  4  5 16  5  6 15  6  7 14  7  8 11  8  9 10
  9  0  0 10  0  0 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0]
query_enc_matrix for this sql:  [1.         0.0042634  1.         0.         0.         0.36416635
 0.         0.         0.00884956 0.         0.         0.
 0.         0.         0.         0.         0.         1.
 1.         0.         0.         0.         0.         0.
 0.         0.         0.         0.23576464 0.         0.08333334
 0.5407442  0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  57.800353291719006
the difference value is:  57.800353291719006
the difference value is:  57.800353291719006
Planning took 138.2ms
q23c, predicted time: 2218.8
q23c,(predicted 2218.8),/*+ NestLoop(n ci cn mc t chn mi it an rt)
 NestLoop(n ci cn mc t chn mi it an)
 NestLoop(n ci cn mc t chn mi it)
 NestLoop(n ci cn mc t chn mi)
 MergeJoin(n ci cn mc t chn)
 NestLoop(n ci cn mc t)
 MergeJoin(n ci cn mc)
 HashJoin(ci cn mc)
 HashJoin(cn mc)
 IndexScan(n)
 SeqScan(ci)
 IndexScan(cn)
 IndexScan(mc)
 IndexScan(t)
 IndexScan(chn)
 IndexScan(mi)
 SeqScan(it)
 IndexScan(an)
 IndexScan(rt)
 Leading((((((((n (ci (cn mc))) t) chn) mi) it) an) rt)) */
---------------------------------------
sql_str:  SELECT MIN(lt.link) AS link_type, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie FROM keyword AS k, link_type AS lt, movie_keyword AS mk, movie_link AS ml, title AS t1, title AS t2 WHERE k.keyword ='10,000-mile-club' AND mk.keyword_id = k.id AND t1.id = mk.movie_id AND ml.movie_id = t1.id AND ml.linked_movie_id = t2.id AND lt.id = ml.link_type_id AND mk.movie_id = t1.id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 3 4 4 3 4 4]
indexes_env_matrix for this sql:  [ 1  2 11  2  3 10  3  4  9  4  5  8  5  6  7  6  0  0  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0]
query_enc_matrix for this sql:  [0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 7.453231e-06
 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 1.000000e+00 1.000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  35.11172721917964
the difference value is:  35.11172721917964
the difference value is:  35.11172721917964
Planning took 52.3ms
q24a, predicted time: 478.2
q24a,(predicted 478.2),/*+ MergeJoin(lt ml t1 mk k t2)
 MergeJoin(lt ml t1 mk k)
 MergeJoin(ml t1 mk k)
 HashJoin(t1 mk k)
 HashJoin(t1 mk)
 SeqScan(lt)
 SeqScan(ml)
 SeqScan(t1)
 SeqScan(mk)
 SeqScan(k)
 IndexScan(t2)
 Leading(((lt (ml ((t1 mk) k))) t2)) */
---------------------------------------
sql_str:  SELECT MAX(lt.link) AS link_type, MAX(t1.title) AS first_movie, MAX(t2.title) AS second_movie FROM keyword AS k, link_type AS lt, movie_keyword AS mk, movie_link AS ml, title AS t1, title AS t2 WHERE k.keyword ='10,000-mile-club' AND mk.keyword_id = k.id AND t1.id = mk.movie_id AND ml.movie_id = t1.id AND ml.linked_movie_id = t2.id AND lt.id = ml.link_type_id AND mk.movie_id = t1.id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 3 4 4 3 4 4]
indexes_env_matrix for this sql:  [ 1  2 11  2  3 10  3  4  9  4  5  8  5  6  7  6  0  0  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0]
query_enc_matrix for this sql:  [0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 7.453231e-06
 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 1.000000e+00 1.000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  32.25687794962783
the difference value is:  32.25687794962783
the difference value is:  32.25687794962783
Planning took 48.7ms
q24b, predicted time: 491.3
q24b,(predicted 491.3),/*+ MergeJoin(t2 ml k mk t1 lt)
 MergeJoin(ml k mk t1 lt)
 MergeJoin(ml k mk t1)
 MergeJoin(k mk t1)
 HashJoin(k mk)
 SeqScan(t2)
 IndexScan(ml)
 IndexScan(k)
 IndexScan(mk)
 SeqScan(t1)
 SeqScan(lt)
 Leading((t2 ((ml ((k mk) t1)) lt))) */
---------------------------------------
sql_str:  SELECT MIN(lt.link) AS link_type, MAX(t1.title) AS first_movie, MAX(t2.title) AS second_movie FROM keyword AS k, link_type AS lt, movie_keyword AS mk, movie_link AS ml, title AS t1, title AS t2 WHERE k.keyword ='10,000-mile-club' AND mk.keyword_id = k.id AND t1.id = mk.movie_id AND ml.movie_id = t1.id AND ml.linked_movie_id = t2.id AND lt.id = ml.link_type_id AND mk.movie_id = t1.id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 3 4 4 3 4 4]
indexes_env_matrix for this sql:  [ 1  2 11  2  3 10  3  4  9  4  5  8  5  6  7  6  0  0  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0]
query_enc_matrix for this sql:  [0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 7.453231e-06
 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 1.000000e+00 1.000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  35.11172721917964
the difference value is:  35.11172721917964
the difference value is:  35.11172721917964
Planning took 52.8ms
q24c, predicted time: 478.2
q24c,(predicted 478.2),/*+ MergeJoin(lt ml t1 mk k t2)
 MergeJoin(lt ml t1 mk k)
 MergeJoin(ml t1 mk k)
 HashJoin(t1 mk k)
 HashJoin(t1 mk)
 SeqScan(lt)
 SeqScan(ml)
 SeqScan(t1)
 SeqScan(mk)
 SeqScan(k)
 IndexScan(t2)
 Leading(((lt (ml ((t1 mk) k))) t2)) */
---------------------------------------
sql_str:  SELECT MIN(cn.name) AS producing_company, MIN(miidx.info) AS rating, MIN(t.title) AS movie FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t WHERE cn.country_code ='[us]' AND ct.kind ='production companies' AND it.info ='rating' AND it2.info ='release dates' AND kt.kind ='movie' AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND miidx.movie_id = t.id AND it.id = miidx.info_type_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = mc.movie_id AND miidx.movie_id = mc.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [0 1 1 0 1 0 1 0 3 3 4 3 4 3 4 4 3]
indexes_env_matrix for this sql:  [ 1  2 17  2  3 16  3  4 15  4  5 14  5  6 13  6  7 12  7  8 11  8  9 10
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.         0.         0.         0.         0.         0.36416635
 0.25       0.         0.00884956 0.         0.00884956 0.
 0.         0.         0.         0.14285715 0.         1.
 1.         0.         0.         0.         0.         0.
 1.         0.         0.         0.         0.         0.
 1.         0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  48.0824545278857
the difference value is:  48.0824545278857
the difference value is:  48.0824545278857
Planning took 111.4ms
q25a, predicted time: 2301.5
q25a,(predicted 2301.5),/*+ NestLoop(ct it mi it2 t kt miidx mc cn)
 NestLoop(it mi it2 t kt miidx mc cn)
 NestLoop(it mi it2 t kt miidx mc)
 NestLoop(it mi it2 t kt miidx)
 NestLoop(mi it2 t kt miidx)
 NestLoop(mi it2 t kt)
 NestLoop(mi it2 t)
 HashJoin(mi it2)
 SeqScan(ct)
 SeqScan(it)
 IndexScan(mi)
 IndexScan(it2)
 IndexScan(t)
 SeqScan(kt)
 IndexScan(miidx)
 IndexScan(mc)
 IndexScan(cn)
 Leading((ct (((it ((((mi it2) t) kt) miidx)) mc) cn))) */
---------------------------------------
sql_str:  SELECT MAX(cn.name) AS producing_company, MAX(miidx.info) AS rating, MAX(t.title) AS movie FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t WHERE cn.country_code ='[us]' AND ct.kind ='production companies' AND it.info ='rating' AND it2.info ='release dates' AND kt.kind ='movie' AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND miidx.movie_id = t.id AND it.id = miidx.info_type_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = mc.movie_id AND miidx.movie_id = mc.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [0 1 1 0 1 0 1 0 3 3 4 3 4 3 4 4 3]
indexes_env_matrix for this sql:  [ 1  2 17  2  3 16  3  4 15  4  5 14  5  6 13  6  7 12  7  8 11  8  9 10
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.         0.         0.         0.         0.         0.36416635
 0.25       0.         0.00884956 0.         0.00884956 0.
 0.         0.         0.         0.14285715 0.         1.
 1.         0.         0.         0.         0.         0.
 1.         0.         0.         0.         0.         0.
 1.         0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  35.78339737163732
the difference value is:  35.78339737163732
the difference value is:  35.78339737163732
Planning took 247.5ms
q25b, predicted time: 39.1
q25b,(predicted 39.1),/*+ HashJoin(kt ct t it2 it mi miidx cn mc)
 HashJoin(ct t it2 it mi miidx cn mc)
 HashJoin(t it2 it mi miidx cn mc)
 HashJoin(it2 it mi miidx cn mc)
 HashJoin(it mi miidx cn mc)
 HashJoin(mi miidx cn mc)
 HashJoin(miidx cn mc)
 HashJoin(cn mc)
 SeqScan(kt)
 IndexScan(ct)
 SeqScan(t)
 SeqScan(it2)
 SeqScan(it)
 SeqScan(mi)
 SeqScan(miidx)
 IndexScan(cn)
 SeqScan(mc)
 Leading((kt (ct (t (it2 (it (mi (miidx (cn mc))))))))) */
---------------------------------------
sql_str:  SELECT MIN(cn.name) AS producing_company, MIN(miidx.info) AS rating, MIN(t.title) AS movie FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t WHERE cn.country_code ='[uk]' AND ct.kind ='production companies' AND it.info ='rating' AND it2.info ='release dates' AND kt.kind ='movie' AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND miidx.movie_id = t.id AND it.id = miidx.info_type_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = mc.movie_id AND miidx.movie_id = mc.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 0 1 0 1 3 4 3 4 3 4 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 17  2  3 16  3  4 15  4  5 14  5  6 13  6  7 12  7  8 11  8  9 10
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 9.3618219e-05 2.5000000e-01 0.0000000e+00 8.8495575e-03 0.0000000e+00
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.4285715e-01 0.0000000e+00 1.0000000e+00 1.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  44.95512211246238
the difference value is:  44.95512211246238
the difference value is:  44.95512211246238
Planning took 127.3ms
q25c, predicted time: 2301.1
q25c,(predicted 2301.1),/*+ NestLoop(t mi it2 kt miidx it mc ct cn)
 NestLoop(t mi it2 kt miidx it mc ct)
 NestLoop(t mi it2 kt miidx it mc)
 NestLoop(t mi it2 kt miidx it)
 NestLoop(t mi it2 kt miidx)
 NestLoop(t mi it2 kt)
 MergeJoin(t mi it2)
 HashJoin(mi it2)
 IndexScan(t)
 IndexScan(mi)
 IndexScan(it2)
 IndexScan(kt)
 IndexScan(miidx)
 SeqScan(it)
 IndexScan(mc)
 SeqScan(ct)
 IndexScan(cn)
 Leading((((((((t (mi it2)) kt) miidx) it) mc) ct) cn)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('8'))
AND (it2.id in ('2'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('Austria','Belgium','Brazil','Denmark','France','Mexico','Spain','UK','USA','Yugoslavia'))
AND (mi2.info in ('Black and White','Color'))
AND (kt.kind in ('episode','movie','tv movie'))
AND (rt.role in ('editor','writer'))
AND (n.gender in ('f','m'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1875)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 1 1 0 1 1 0 3 0 3 3 4 4 3 4 4 5]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 13 12  0  0 13 14 15 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         1.         0.42857143 0.         0.
 0.         0.00522624 0.00829464 0.         0.         0.
 0.         1.         0.         0.65136147 0.         0.16666667
 0.18108603 0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  65.2343263924866
the difference value is:  65.2343263924866
the difference value is:  65.2343263924866
Planning took 388.5ms
q26a, predicted time: 7.7
q26a,(predicted 7.7),/*+ HashJoin(it2 kt it1 k mk mi1 mi2 t rt n ci)
 HashJoin(kt it1 k mk mi1 mi2 t rt n ci)
 HashJoin(it1 k mk mi1 mi2 t rt n ci)
 HashJoin(k mk mi1 mi2 t rt n ci)
 HashJoin(mk mi1 mi2 t rt n ci)
 HashJoin(mi1 mi2 t rt n ci)
 HashJoin(mi2 t rt n ci)
 HashJoin(t rt n ci)
 HashJoin(rt n ci)
 HashJoin(n ci)
 SeqScan(it2)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(mi1)
 SeqScan(mi2)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(n)
 IndexScan(ci)
 Leading((it2 (kt (it1 (k (mk (mi1 (mi2 (t (rt (n ci))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('8'))
AND (it2.id in ('2'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('Austria','Belgium','Brazil','Denmark','France','Mexico','Spain','UK','USA','Yugoslavia'))
AND (mi2.info in ('Black and White','Color'))
AND (kt.kind in ('episode','movie','tv movie'))
AND (rt.role in ('editor','writer'))
AND (n.gender in ('f','m'))
AND (t.production_year <= 2000)
AND (t.production_year >= 1900)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 1 1 0 1 1 0 3 0 3 3 4 4 3 4 4 5]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 13 12  0  0 13 14 15 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         1.         0.42857143 0.         0.
 0.         0.00522624 0.00829464 0.         0.         0.
 0.         1.         0.         0.65136147 0.         0.16666667
 0.42983183 0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  74.17638417822693
the difference value is:  74.17638417822693
the difference value is:  74.17638417822693
Planning took 1140.7ms
q26b, predicted time: 7384.6
q26b,(predicted 7384.6),/*+ NestLoop(it1 mi1 kt mi2 t it2 ci n rt mk k)
 NestLoop(it1 mi1 kt mi2 t it2 ci n rt mk)
 NestLoop(it1 mi1 kt mi2 t it2 ci n rt)
 NestLoop(it1 mi1 kt mi2 t it2 ci n)
 NestLoop(it1 mi1 kt mi2 t it2 ci)
 HashJoin(it1 mi1 kt mi2 t it2)
 HashJoin(it1 mi1 kt mi2 t)
 HashJoin(mi1 kt mi2 t)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(kt)
 IndexScan(mi2)
 IndexScan(t)
 SeqScan(it2)
 IndexScan(ci)
 IndexScan(n)
 SeqScan(rt)
 IndexScan(mk)
 IndexScan(k)
 Leading((((((((it1 (mi1 (kt (mi2 t)))) it2) ci) n) rt) mk) k)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('8'))
AND (it2.id in ('2'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('Brazil','Denmark','France','Mexico','Spain','UK','USA','Yugoslavia'))
AND (mi2.info in ('Black and White','Color'))
AND (kt.kind in ('episode','movie','tv movie'))
AND (rt.role in ('editor','writer'))
AND (n.gender in ('f','m'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1875)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 1 1 0 1 1 0 3 0 3 3 4 4 3 4 4 5]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 13 12  0  0 13 14 15 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         1.         0.42857143 0.         0.
 0.         0.00514872 0.00829464 0.         0.         0.
 0.         1.         0.         0.65136147 0.         0.16666667
 0.18108603 0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  65.23432557080369
the difference value is:  65.23432557080369
the difference value is:  65.23432557080369
Planning took 396.4ms
q26c, predicted time: 7.7
q26c,(predicted 7.7),/*+ HashJoin(it2 kt it1 k mk mi1 mi2 t rt n ci)
 HashJoin(kt it1 k mk mi1 mi2 t rt n ci)
 HashJoin(it1 k mk mi1 mi2 t rt n ci)
 HashJoin(k mk mi1 mi2 t rt n ci)
 HashJoin(mk mi1 mi2 t rt n ci)
 HashJoin(mi1 mi2 t rt n ci)
 HashJoin(mi2 t rt n ci)
 HashJoin(t rt n ci)
 HashJoin(rt n ci)
 HashJoin(n ci)
 SeqScan(it2)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(mi1)
 SeqScan(mi2)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(n)
 IndexScan(ci)
 Leading((it2 (kt (it1 (k (mk (mi1 (mi2 (t (rt (n ci))))))))))) */
---------------------------------------
sql_str:  SELECT MIN(t.title) AS movie_title FROM keyword AS k, movie_info AS mi, movie_keyword AS mk, title AS t WHERE k.keyword  like '%sequel%' AND mi.info  IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND t.production_year > 1990 AND t.id = mi.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND k.id = mk.keyword_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 3 4 4 4]
indexes_env_matrix for this sql:  [1 2 7 2 3 6 3 4 5 4 0 0 5 0 0 6 0 0 7 0 0]
query_enc_matrix for this sql:  [0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 9.6891999e-05
 0.0000000e+00 0.0000000e+00 0.0000000e+00 4.6758972e-02 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 6.9064540e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  47.73489663390436
the difference value is:  47.73489663390436
the difference value is:  47.73489663390436
Planning took 30.6ms
q27a, predicted time: 353.2
q27a,(predicted 353.2),/*+ MergeJoin(mi t k mk)
 MergeJoin(t k mk)
 HashJoin(k mk)
 IndexScan(mi)
 IndexScan(t)
 IndexScan(k)
 IndexScan(mk)
 Leading((mi (t (k mk)))) */
---------------------------------------
sql_str:  SELECT MAX(t.title) AS movie_title FROM keyword AS k, movie_info AS mi, movie_keyword AS mk, title AS t WHERE k.keyword  like '%sequel%' AND mi.info  IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND t.production_year > 1990 AND t.id = mi.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND k.id = mk.keyword_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 3 4 4 4]
indexes_env_matrix for this sql:  [1 2 7 2 3 6 3 4 5 4 0 0 5 0 0 6 0 0 7 0 0]
query_enc_matrix for this sql:  [0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 9.6891999e-05
 0.0000000e+00 0.0000000e+00 0.0000000e+00 4.6758972e-02 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 6.9064540e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  54.74694784850598
the difference value is:  54.74694784850598
the difference value is:  54.74694784850598
Planning took 30.1ms
q27b, predicted time: 424.5
q27b,(predicted 424.5),/*+ MergeJoin(t mi mk k)
 HashJoin(mi mk k)
 HashJoin(mi mk)
 SeqScan(t)
 IndexScan(mi)
 SeqScan(mk)
 SeqScan(k)
 Leading((t ((mi mk) k))) */
---------------------------------------
sql_str:  SELECT MIN(mi.info) AS release_date, MIN(miidx.info) AS rating, MIN(t.title) AS german_movie FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t WHERE cn.country_code ='[de]' AND ct.kind ='production companies' AND it.info ='rating' AND it2.info ='release dates' AND kt.kind ='movie' AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND miidx.movie_id = t.id AND it.id = miidx.info_type_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = mc.movie_id AND miidx.movie_id = mc.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [0 1 1 0 1 0 1 0 3 3 4 3 4 3 4 4 3]
indexes_env_matrix for this sql:  [ 1  2 17  2  3 16  3  4 15  4  5 14  5  6 13  6  7 12  7  8 11  8  9 10
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.         0.         0.         0.         0.         0.04353247
 0.25       0.         0.00884956 0.         0.00884956 0.
 0.         0.         0.         0.14285715 0.         1.
 1.         0.         0.         0.         0.         0.
 1.         0.         0.         0.         0.         0.
 1.         0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  47.95695047350897
the difference value is:  47.95695047350897
the difference value is:  47.95695047350897
Planning took 127.7ms
q28a, predicted time: 2291.0
q28a,(predicted 2291.0),/*+ NestLoop(t mi it2 kt miidx it mc ct cn)
 NestLoop(t mi it2 kt miidx it mc ct)
 NestLoop(t mi it2 kt miidx it mc)
 NestLoop(t mi it2 kt miidx it)
 NestLoop(t mi it2 kt miidx)
 NestLoop(t mi it2 kt)
 MergeJoin(t mi it2)
 HashJoin(mi it2)
 IndexScan(t)
 IndexScan(mi)
 IndexScan(it2)
 IndexScan(kt)
 IndexScan(miidx)
 SeqScan(it)
 IndexScan(mc)
 SeqScan(ct)
 IndexScan(cn)
 Leading((((((((t (mi it2)) kt) miidx) it) mc) ct) cn)) */
---------------------------------------
sql_str:  SELECT MAX(mi.info) AS release_date, MAX(miidx.info) AS rating, MAX(t.title) AS german_movie FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t WHERE cn.country_code ='[de]' AND ct.kind ='production companies' AND it.info ='rating' AND it2.info ='release dates' AND kt.kind ='movie' AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND miidx.movie_id = t.id AND it.id = miidx.info_type_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = mc.movie_id AND miidx.movie_id = mc.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [0 1 1 0 1 0 1 0 3 3 4 3 4 3 4 4 3]
indexes_env_matrix for this sql:  [ 1  2 17  2  3 16  3  4 15  4  5 14  5  6 13  6  7 12  7  8 11  8  9 10
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.         0.         0.         0.         0.         0.04353247
 0.25       0.         0.00884956 0.         0.00884956 0.
 0.         0.         0.         0.14285715 0.         1.
 1.         0.         0.         0.         0.         0.
 1.         0.         0.         0.         0.         0.
 1.         0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  35.65492777607317
the difference value is:  35.65492777607317
the difference value is:  35.65492777607317
Planning took 221.0ms
q28b, predicted time: 13.6
q28b,(predicted 13.6),/*+ HashJoin(it2 it kt t mi miidx cn mc ct)
 HashJoin(it2 it kt t mi miidx cn mc)
 HashJoin(it kt t mi miidx cn mc)
 HashJoin(kt t mi miidx cn mc)
 HashJoin(t mi miidx cn mc)
 HashJoin(mi miidx cn mc)
 HashJoin(miidx cn mc)
 HashJoin(cn mc)
 IndexScan(it2)
 IndexScan(it)
 IndexScan(kt)
 SeqScan(t)
 SeqScan(mi)
 SeqScan(miidx)
 IndexScan(cn)
 SeqScan(mc)
 SeqScan(ct)
 Leading(((it2 (it (kt (t (mi (miidx (cn mc))))))) ct)) */
---------------------------------------
sql_str:  SELECT MIN(mi.info) AS release_date, MIN(miidx.info) AS rating, MIN(t.title) AS german_movie FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t WHERE cn.country_code ='[us]' AND ct.kind ='production companies' AND it.info ='rating' AND it2.info ='release dates' AND kt.kind ='movie' AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND miidx.movie_id = t.id AND it.id = miidx.info_type_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = mc.movie_id AND miidx.movie_id = mc.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [0 1 1 0 1 0 1 0 3 3 4 3 4 3 4 4 3]
indexes_env_matrix for this sql:  [ 1  2 17  2  3 16  3  4 15  4  5 14  5  6 13  6  7 12  7  8 11  8  9 10
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.         0.         0.         0.         0.         0.36416635
 0.25       0.         0.00884956 0.         0.00884956 0.
 0.         0.         0.         0.14285715 0.         1.
 1.         0.         0.         0.         0.         0.
 1.         0.         0.         0.         0.         0.
 1.         0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  48.0824545278857
the difference value is:  48.0824545278857
the difference value is:  48.0824545278857
Planning took 109.1ms
q28c, predicted time: 2301.5
q28c,(predicted 2301.5),/*+ NestLoop(ct it mi it2 t kt miidx mc cn)
 NestLoop(it mi it2 t kt miidx mc cn)
 NestLoop(it mi it2 t kt miidx mc)
 NestLoop(it mi it2 t kt miidx)
 NestLoop(mi it2 t kt miidx)
 NestLoop(mi it2 t kt)
 NestLoop(mi it2 t)
 HashJoin(mi it2)
 SeqScan(ct)
 SeqScan(it)
 IndexScan(mi)
 IndexScan(it2)
 IndexScan(t)
 SeqScan(kt)
 IndexScan(miidx)
 IndexScan(mc)
 IndexScan(cn)
 Leading((ct (((it ((((mi it2) t) kt) miidx)) mc) cn))) */
---------------------------------------
sql_str:  SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS marvel_movie FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword = 'marvel-cinematic-universe' AND n.name LIKE '%Downey%Robert%' AND t.production_year > 2000 AND k.id = mk.keyword_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND n.id = ci.person_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 4 4 4 4]
indexes_env_matrix for this sql:  [1 2 9 2 3 8 3 4 7 4 5 6 5 0 0 6 0 0 7 0 0 8 0 0 9 0 0]
query_enc_matrix for this sql:  [0.00000000e+00 1.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 7.45323086e-06 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 1.00000000e+00 0.00000000e+00 1.00060206e-04
 0.00000000e+00 0.00000000e+00 5.40744185e-01 0.00000000e+00
 0.00000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  49.73935193665928
the difference value is:  49.73935193665928
the difference value is:  49.73935193665928
Planning took 69.0ms
q29a, predicted time: 14.0
q29a,(predicted 14.0),/*+ HashJoin(t k mk n ci)
 HashJoin(k mk n ci)
 HashJoin(mk n ci)
 HashJoin(n ci)
 SeqScan(t)
 SeqScan(k)
 SeqScan(mk)
 IndexScan(n)
 IndexScan(ci)
 Leading((t (k (mk (n ci))))) */
---------------------------------------
sql_str:  SELECT MAX(k.keyword) AS movie_keyword, MAX(n.name) AS actor_name, MAX(t.title) AS marvel_movie FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword = 'marvel-cinematic-universe' AND n.name LIKE '%Downey%Robert%' AND t.production_year > 2000 AND k.id = mk.keyword_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND n.id = ci.person_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 4 4 4 4]
indexes_env_matrix for this sql:  [1 2 9 2 3 8 3 4 7 4 5 6 5 0 0 6 0 0 7 0 0 8 0 0 9 0 0]
query_enc_matrix for this sql:  [0.00000000e+00 1.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 7.45323086e-06 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 1.00000000e+00 0.00000000e+00 1.00060206e-04
 0.00000000e+00 0.00000000e+00 5.40744185e-01 0.00000000e+00
 0.00000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  38.64339623878156
the difference value is:  38.64339623878156
the difference value is:  38.64339623878156
Planning took 83.1ms
q29b, predicted time: 6728.7
q29b,(predicted 6728.7),/*+ HashJoin(n ci k mk t)
 HashJoin(n ci k mk)
 HashJoin(ci k mk)
 HashJoin(k mk)
 SeqScan(n)
 SeqScan(ci)
 IndexScan(k)
 IndexScan(mk)
 SeqScan(t)
 Leading(((n (ci (k mk))) t)) */
---------------------------------------
sql_str:  SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS marvel_movie FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword = 'marvel-cinematic-universe' AND n.name LIKE '%Downey%Robert%' AND t.production_year > 2000 AND k.id = mk.keyword_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND n.id = ci.person_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 4 4 4 4]
indexes_env_matrix for this sql:  [1 2 9 2 3 8 3 4 7 4 5 6 5 0 0 6 0 0 7 0 0 8 0 0 9 0 0]
query_enc_matrix for this sql:  [0.00000000e+00 1.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 7.45323086e-06 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 1.00000000e+00 0.00000000e+00 1.00060206e-04
 0.00000000e+00 0.00000000e+00 5.40744185e-01 0.00000000e+00
 0.00000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  49.73935193665928
the difference value is:  49.73935193665928
the difference value is:  49.73935193665928
Planning took 68.1ms
q29c, predicted time: 14.0
q29c,(predicted 14.0),/*+ HashJoin(t k mk n ci)
 HashJoin(k mk n ci)
 HashJoin(mk n ci)
 HashJoin(n ci)
 SeqScan(t)
 SeqScan(k)
 SeqScan(mk)
 IndexScan(n)
 IndexScan(ci)
 Leading((t (k (mk (n ci))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('2'))
AND (mi1.info in ('Color'))
AND (kt.kind in ('movie','tv movie','tv series'))
AND (rt.role in ('actor','writer'))
AND (n.gender in ('m'))
AND (n.surname_pcode in ('B4','B6','C462','D12','D25','G65','H65','J525','K5','P6','P62','R3','S5') OR n.surname_pcode IS NULL)
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (cn.name in ('Columbia Broadcasting System (CBS)','Fox Network','Independent Television (ITV)','Metro-Goldwyn-Mayer (MGM)','National Broadcasting Company (NBC)','Shout! Factory','Universal Pictures','Universal TV','Warner Bros'))
AND (ct.kind in ('distributors','production companies'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 0 1 1 3 4 4 3 3 4 4 4 3 4 5 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 4.2553736e-05 5.0000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 4.2857143e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 6.4823278e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.0392488e-01 0.0000000e+00 1.6666667e-01
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  76.66121964227997
the difference value is:  76.66121964227997
the difference value is:  76.66121964227997
Planning took 370.5ms
q2a, predicted time: 6323.2
q2a,(predicted 6323.2),/*+ NestLoop(ct cn mc n ci t k mk kt rt mi1 it1)
 HashJoin(ct cn mc n ci t k mk kt rt mi1)
 HashJoin(ct cn mc n ci t k mk kt rt)
 HashJoin(ct cn mc n ci t k mk kt)
 HashJoin(ct cn mc n ci t k mk)
 HashJoin(cn mc n ci t k mk)
 HashJoin(mc n ci t k mk)
 HashJoin(n ci t k mk)
 HashJoin(ci t k mk)
 HashJoin(t k mk)
 HashJoin(k mk)
 SeqScan(ct)
 SeqScan(cn)
 SeqScan(mc)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(t)
 IndexScan(k)
 IndexScan(mk)
 IndexScan(kt)
 IndexScan(rt)
 SeqScan(mi1)
 IndexScan(it1)
 Leading((((((ct (cn (mc (n (ci (t (k mk))))))) kt) rt) mi1) it1)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('2'))
AND (mi1.info in ('Color'))
AND (kt.kind in ('movie','tv movie','tv series'))
AND (rt.role in ('actress','writer'))
AND (n.gender in ('f'))
AND (n.surname_pcode in ('B4','B6','C462','D12','D25','G65','H65','J525','K5','P6','P62','R3','S5') OR n.surname_pcode IS NULL)
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (cn.name in ('Columbia Broadcasting System (CBS)','Fox Network','Independent Television (ITV)','Metro-Goldwyn-Mayer (MGM)','National Broadcasting Company (NBC)','Shout! Factory','Universal Pictures','Universal TV','Warner Bros'))
AND (ct.kind in ('distributors','production companies'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 0 1 1 1 1 1 0 0 1 1 3 4 4 3 3 4 5 4 3 4 3 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 4.2553736e-05 5.0000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 4.2857143e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 6.4823278e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 5.8955856e-02 0.0000000e+00 1.6666667e-01
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  67.83136041815317
the difference value is:  67.83136041815317
the difference value is:  67.83136041815317
Planning took 370.8ms
q2c, predicted time: 21.0
q2c,(predicted 21.0),/*+ HashJoin(k mk it1 kt rt mi1 cn n ci t mc ct)
 HashJoin(mk it1 kt rt mi1 cn n ci t mc ct)
 HashJoin(it1 kt rt mi1 cn n ci t mc ct)
 HashJoin(kt rt mi1 cn n ci t mc ct)
 HashJoin(rt mi1 cn n ci t mc ct)
 HashJoin(mi1 cn n ci t mc ct)
 HashJoin(cn n ci t mc ct)
 HashJoin(n ci t mc ct)
 HashJoin(ci t mc ct)
 HashJoin(t mc ct)
 HashJoin(mc ct)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(it1)
 SeqScan(kt)
 SeqScan(rt)
 SeqScan(mi1)
 SeqScan(cn)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(t)
 SeqScan(mc)
 IndexScan(ct)
 Leading((k (mk (it1 (kt (rt (mi1 (cn (n (ci (t (mc ct)))))))))))) */
---------------------------------------
sql_str:  SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info  = 'genres' AND it2.info  = 'votes' AND mi.info  in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND n.gender  = 'm' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 0 1 0 3 3 4 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 13  2  3 12  3  4 11  4  5 10  5  6  9  6  7  8  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0]
query_enc_matrix for this sql:  [0.         0.03297477 0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         0.         0.         0.         0.
 0.01406167 0.         0.         1.         0.         0.
 0.         0.         0.         0.41559657 0.         0.
 1.         0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  17.508817325481445
the difference value is:  17.508817325481445
the difference value is:  17.508817325481445
Planning took 85.4ms
q30a, predicted time: 340.4
q30a,(predicted 340.4),/*+ MergeJoin(n ci mi it1 t mi_idx it2)
 MergeJoin(ci mi it1 t mi_idx it2)
 MergeJoin(mi it1 t mi_idx it2)
 MergeJoin(mi it1 t mi_idx)
 MergeJoin(mi it1 t)
 HashJoin(mi it1)
 IndexScan(n)
 IndexScan(ci)
 IndexScan(mi)
 IndexScan(it1)
 IndexScan(t)
 SeqScan(mi_idx)
 IndexScan(it2)
 Leading((n (ci ((((mi it1) t) mi_idx) it2)))) */
---------------------------------------
sql_str:  SELECT MAX(mi.info) AS movie_budget, MAX(mi_idx.info) AS movie_votes, MAX(t.title) AS movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info  = 'genres' AND it2.info  = 'votes' AND mi.info  in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND n.gender  = 'm' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 0 1 0 3 3 4 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 13  2  3 12  3  4 11  4  5 10  5  6  9  6  7  8  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0]
query_enc_matrix for this sql:  [0.         0.03297477 0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         0.         0.         0.         0.
 0.01406167 0.         0.         1.         0.         0.
 0.         0.         0.         0.41559657 0.         0.
 1.         0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  35.597810838879866
the difference value is:  35.597810838879866
the difference value is:  35.597810838879866
Planning took 258.1ms
q30b, predicted time: 89.7
q30b,(predicted 89.7),/*+ HashJoin(mi_idx it2 ci t mi it1 n)
 HashJoin(mi_idx it2 ci t mi it1)
 HashJoin(mi_idx it2 ci t mi)
 HashJoin(mi_idx it2 ci t)
 HashJoin(mi_idx it2 ci)
 HashJoin(mi_idx it2)
 IndexScan(mi_idx)
 IndexScan(it2)
 IndexScan(ci)
 IndexScan(t)
 IndexScan(mi)
 IndexScan(it1)
 IndexScan(n)
 Leading(((((((mi_idx it2) ci) t) mi) it1) n)) */
---------------------------------------
sql_str:  SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t WHERE ci.note  in ('(writer)', '(head writer)' ,'(story editor)') AND it1.info  = 'genres' AND it2.info  = 'votes' AND mi.info  in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND n.gender  = 'm' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 0 1 0 3 3 4 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 13  2  3 12  3  4 11  4  5 10  5  6  9  6  7  8  7  0  0  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0]
query_enc_matrix for this sql:  [0.         0.02268266 0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         0.         0.         0.         0.
 0.01406167 0.         0.         1.         0.         0.
 0.         0.         0.         0.41559657 0.         0.
 1.         0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  17.50819514141832
the difference value is:  17.50819514141832
the difference value is:  17.50819514141832
Planning took 98.2ms
q30c, predicted time: 322.8
q30c,(predicted 322.8),/*+ MergeJoin(n ci mi it1 t mi_idx it2)
 MergeJoin(ci mi it1 t mi_idx it2)
 MergeJoin(mi it1 t mi_idx it2)
 MergeJoin(mi it1 t mi_idx)
 MergeJoin(mi it1 t)
 HashJoin(mi it1)
 IndexScan(n)
 IndexScan(ci)
 IndexScan(mi)
 IndexScan(it1)
 IndexScan(t)
 SeqScan(mi_idx)
 IndexScan(it2)
 Leading((n (ci ((((mi it1) t) mi_idx) it2)))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('MET:600 m','OFM:35 mm','PCS:Spherical','PFM:35 mm','RAT:1.37 : 1'))
AND (mi2.info in ('France','Germany','Japan','Mexico','Portugal','Spain','UK','USA'))
AND (kt.kind in ('tv series','video game','video movie'))
AND (rt.role in ('producer'))
AND (n.gender in ('m') OR n.gender IS NULL)
AND (t.production_year <= 1975)
AND (t.production_year >= 1925)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 1 1 0 1 1 0 3 0 3 3 4 4 3 4 4 5]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 13 12  0  0 13 14 15 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         1.         0.42857143 0.         0.
 0.         0.00423404 0.00565136 0.         0.         0.
 0.         1.         0.         0.6193362  0.         0.08333334
 0.13999696 0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  65.15769577179603
the difference value is:  65.15769577179603
the difference value is:  65.15769577179603
Planning took 1106.4ms
q31a, predicted time: 13.5
q31a,(predicted 13.5),/*+ HashJoin(it2 kt n it1 k mk rt ci t mi2 mi1)
 HashJoin(kt n it1 k mk rt ci t mi2 mi1)
 HashJoin(n it1 k mk rt ci t mi2 mi1)
 HashJoin(it1 k mk rt ci t mi2 mi1)
 HashJoin(k mk rt ci t mi2 mi1)
 HashJoin(mk rt ci t mi2 mi1)
 HashJoin(rt ci t mi2 mi1)
 HashJoin(ci t mi2 mi1)
 HashJoin(t mi2 mi1)
 HashJoin(mi2 mi1)
 SeqScan(it2)
 SeqScan(kt)
 SeqScan(n)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(rt)
 SeqScan(ci)
 SeqScan(t)
 SeqScan(mi2)
 IndexScan(mi1)
 Leading((it2 (kt (n (it1 (k (mk (rt (ci (t (mi2 mi1))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('MET:600 m','OFM:35 mm','PCS:Spherical','PFM:35 mm','RAT:1.37 : 1'))
AND (mi2.info in ('France','Germany','Japan','Mexico','Portugal','Spain','UK','USA'))
AND (kt.kind in ('tv series','video game','video movie'))
AND (rt.role in ('producer'))
AND (n.gender in ('m') OR n.gender IS NULL)
AND (t.production_year <= 2000)
AND (t.production_year >= 1925)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 1 1 0 1 1 0 1 3 4 3 4 4 3 4 4 5]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 15 12 13 14 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         1.         0.42857143 0.         0.
 0.         0.00423404 0.00565136 0.         0.         0.
 0.         1.         0.         0.6193362  0.         0.08333334
 0.39137694 0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  73.08771416040115
the difference value is:  73.08771416040115
the difference value is:  73.08771416040115
Planning took 596.4ms
q31b, predicted time: 7318.6
q31b,(predicted 7318.6),/*+ NestLoop(rt kt it1 it2 mi1 mi2 t ci mk n k)
 NestLoop(kt it1 it2 mi1 mi2 t ci mk n k)
 NestLoop(kt it1 it2 mi1 mi2 t ci mk n)
 NestLoop(kt it1 it2 mi1 mi2 t ci mk)
 NestLoop(kt it1 it2 mi1 mi2 t ci)
 HashJoin(kt it1 it2 mi1 mi2 t)
 HashJoin(it1 it2 mi1 mi2 t)
 HashJoin(it2 mi1 mi2 t)
 HashJoin(mi1 mi2 t)
 HashJoin(mi2 t)
 SeqScan(rt)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(it2)
 SeqScan(mi1)
 IndexScan(mi2)
 SeqScan(t)
 IndexScan(ci)
 IndexScan(mk)
 IndexScan(n)
 IndexScan(k)
 Leading((rt (((((kt (it1 (it2 (mi1 (mi2 t))))) ci) mk) n) k))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('18'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('OFM:35 mm','OFM:Live','PFM:35 mm','RAT:1.33 : 1'))
AND (mi2.info in ('20th Century Fox Studios - 10201 Pico Blvd., Century City, Los Angeles, California, USA','Desilu Studios - 9336 W. Washington Blvd., Culver City, California, USA','Hal Roach Studios - 8822 Washington Blvd., Culver City, California, USA','New York City, New York, USA','Revue Studios, Hollywood, Los Angeles, California, USA','Universal Studios - 100 Universal City Plaza, Universal City, California, USA','Warner Brothers Burbank Studios - 4000 Warner Boulevard, Burbank, California, USA'))
AND (kt.kind in ('tv series','video game','video movie'))
AND (rt.role in ('actress','writer'))
AND (n.gender in ('f','m'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1925)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 0 1 3 4 3 4 3 3 4 4 4 4 5]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 4.2857143e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 4.5711971e-03
 5.4193526e-05 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 6.5136147e-01 0.0000000e+00 1.6666667e-01
 1.3999696e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  54.220762530113696
the difference value is:  54.220762530113696
the difference value is:  54.220762530113696
Planning took 388.6ms
q32a, predicted time: 7.8
q32a,(predicted 7.8),/*+ HashJoin(it1 it2 kt k mk mi2 mi1 t rt n ci)
 HashJoin(it2 kt k mk mi2 mi1 t rt n ci)
 HashJoin(kt k mk mi2 mi1 t rt n ci)
 HashJoin(k mk mi2 mi1 t rt n ci)
 HashJoin(mk mi2 mi1 t rt n ci)
 HashJoin(mi2 mi1 t rt n ci)
 HashJoin(mi1 t rt n ci)
 HashJoin(t rt n ci)
 HashJoin(rt n ci)
 HashJoin(n ci)
 SeqScan(it1)
 SeqScan(it2)
 SeqScan(kt)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(mi2)
 SeqScan(mi1)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(n)
 IndexScan(ci)
 Leading((it1 (it2 (kt (k (mk (mi2 (mi1 (t (rt (n ci))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('18'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('OFM:35 mm','OFM:Live','PFM:35 mm','RAT:1.33 : 1'))
AND (mi2.info in ('20th Century Fox Studios - 10201 Pico Blvd., Century City, Los Angeles, California, USA','Desilu Studios - 9336 W. Washington Blvd., Culver City, California, USA','Hal Roach Studios - 8822 Washington Blvd., Culver City, California, USA','New York City, New York, USA','Revue Studios, Hollywood, Los Angeles, California, USA','Universal Studios - 100 Universal City Plaza, Universal City, California, USA','Warner Brothers Burbank Studios - 4000 Warner Boulevard, Burbank, California, USA'))
AND (kt.kind in ('tv series','video game','video movie'))
AND (rt.role in ('actress','writer'))
AND (n.gender in ('f','m'))
AND (t.production_year <= 2000)
AND (t.production_year >= 1950)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 0 1 1 1 1 0 1 3 4 3 4 3 3 4 3 4 4 5]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 4.2857143e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 4.5711971e-03
 5.4193526e-05 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 6.5136147e-01 0.0000000e+00 1.6666667e-01
 3.6568391e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  66.12781217934509
the difference value is:  66.12781217934509
the difference value is:  66.12781217934509
Planning took 930.9ms
q32b, predicted time: 7274.2
q32b,(predicted 7274.2),/*+ NestLoop(mi1 kt mi2 t it1 it2 ci rt n mk k)
 NestLoop(mi1 kt mi2 t it1 it2 ci rt n mk)
 NestLoop(mi1 kt mi2 t it1 it2 ci rt n)
 NestLoop(mi1 kt mi2 t it1 it2 ci rt)
 NestLoop(mi1 kt mi2 t it1 it2 ci)
 HashJoin(mi1 kt mi2 t it1 it2)
 HashJoin(mi1 kt mi2 t it1)
 HashJoin(mi1 kt mi2 t)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(mi1)
 SeqScan(kt)
 IndexScan(mi2)
 IndexScan(t)
 SeqScan(it1)
 SeqScan(it2)
 IndexScan(ci)
 SeqScan(rt)
 IndexScan(n)
 IndexScan(mk)
 IndexScan(k)
 Leading(((((((((mi1 (kt (mi2 t))) it1) it2) ci) rt) n) mk) k)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('18'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('OFM:35 mm','OFM:Live','PFM:35 mm','RAT:1.33 : 1'))
AND (mi2.info in ('20th Century Fox Studios - 10201 Pico Blvd., Century City, Los Angeles, California, USA','Desilu Studios - 9336 W. Washington Blvd., Culver City, California, USA','Hal Roach Studios - 8822 Washington Blvd., Culver City, California, USA','New York City, New York, USA','Revue Studios, Hollywood, Los Angeles, California, USA','Universal Studios - 100 Universal City Plaza, Universal City, California, USA','Warner Brothers Burbank Studios - 4000 Warner Boulevard, Burbank, California, USA'))
AND (kt.kind in ('tv series','video game','video movie'))
AND (rt.role in ('actress','writer'))
AND (n.gender in ('f'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1925)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 0 1 3 4 3 4 3 3 4 4 4 4 5]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 4.2857143e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 4.5711971e-03
 5.4193526e-05 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.3576464e-01 0.0000000e+00 1.6666667e-01
 1.3999696e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  53.83764617476423
the difference value is:  53.83764617476423
the difference value is:  53.83764617476423
Planning took 918.3ms
q32c, predicted time: 10.5
q32c,(predicted 10.5),/*+ HashJoin(it1 n it2 rt kt k mk ci t mi2 mi1)
 HashJoin(n it2 rt kt k mk ci t mi2 mi1)
 HashJoin(it2 rt kt k mk ci t mi2 mi1)
 HashJoin(rt kt k mk ci t mi2 mi1)
 HashJoin(kt k mk ci t mi2 mi1)
 HashJoin(k mk ci t mi2 mi1)
 HashJoin(mk ci t mi2 mi1)
 HashJoin(ci t mi2 mi1)
 HashJoin(t mi2 mi1)
 HashJoin(mi2 mi1)
 SeqScan(it1)
 SeqScan(n)
 SeqScan(it2)
 SeqScan(rt)
 SeqScan(kt)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(ci)
 SeqScan(t)
 SeqScan(mi2)
 IndexScan(mi1)
 Leading((it1 (n (it2 (rt (kt (k (mk (ci (t (mi2 mi1))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('3'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('PCS:Spherical','PFM:16 mm','PFM:35 mm','RAT:1.33 : 1','RAT:1.66 : 1','RAT:1.85 : 1'))
AND (mi2.info in ('Adult','Comedy','Documentary','Drama','Mystery','Romance','Short','Thriller','Western'))
AND (kt.kind in ('tv series','video game','video movie'))
AND (rt.role in ('miscellaneous crew','producer'))
AND (n.gender in ('f','m'))
AND (t.production_year <= 1990)
AND (t.production_year >= 1950)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 1 1 0 1 1 0 1 3 4 3 4 4 3 4 4 5]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 15 12 13 14 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         1.         0.42857143 0.         0.
 0.         0.00405602 0.00881218 0.         0.         0.
 0.         1.         0.         0.65136147 0.         0.16666667
 0.2157827  0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  73.04462414342659
the difference value is:  73.04462414342659
the difference value is:  73.04462414342659
Planning took 661.9ms
q33a, predicted time: 7044.2
q33a,(predicted 7044.2),/*+ NestLoop(kt it1 it2 mi1 mi2 t ci rt mk k n)
 NestLoop(kt it1 it2 mi1 mi2 t ci rt mk k)
 NestLoop(kt it1 it2 mi1 mi2 t ci rt mk)
 NestLoop(kt it1 it2 mi1 mi2 t ci rt)
 NestLoop(kt it1 it2 mi1 mi2 t ci)
 HashJoin(kt it1 it2 mi1 mi2 t)
 HashJoin(it1 it2 mi1 mi2 t)
 HashJoin(it2 mi1 mi2 t)
 HashJoin(mi1 mi2 t)
 HashJoin(mi2 t)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(it2)
 SeqScan(mi1)
 IndexScan(mi2)
 SeqScan(t)
 IndexScan(ci)
 SeqScan(rt)
 IndexScan(mk)
 IndexScan(k)
 IndexScan(n)
 Leading(((((((kt (it1 (it2 (mi1 (mi2 t))))) ci) rt) mk) k) n)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('3'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('PCS:Spherical','PFM:16 mm','PFM:35 mm','RAT:1.33 : 1','RAT:1.66 : 1','RAT:1.85 : 1'))
AND (mi2.info in ('Adult','Comedy','Documentary','Drama','Mystery','Romance','Short','Thriller','Western'))
AND (kt.kind in ('tv series','video game','video movie'))
AND (rt.role in ('miscellaneous crew','producer'))
AND (n.gender in ('m'))
AND (t.production_year <= 1990)
AND (t.production_year >= 1950)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 1 1 0 1 1 0 1 3 4 3 4 4 3 4 4 5]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 15 12 13 14 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         1.         0.42857143 0.         0.
 0.         0.00405602 0.00881218 0.         0.         0.
 0.         1.         0.         0.41559657 0.         0.16666667
 0.2157827  0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  63.988918278196024
the difference value is:  63.988918278196024
the difference value is:  63.988918278196024
Planning took 287.8ms
q33b, predicted time: 5.9
q33b,(predicted 5.9),/*+ HashJoin(it2 kt it1 k mk mi1 mi2 t rt ci n)
 HashJoin(kt it1 k mk mi1 mi2 t rt ci n)
 HashJoin(it1 k mk mi1 mi2 t rt ci n)
 HashJoin(k mk mi1 mi2 t rt ci n)
 HashJoin(mk mi1 mi2 t rt ci n)
 HashJoin(mi1 mi2 t rt ci n)
 HashJoin(mi2 t rt ci n)
 HashJoin(t rt ci n)
 HashJoin(rt ci n)
 HashJoin(ci n)
 SeqScan(it2)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(mi1)
 SeqScan(mi2)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(ci)
 IndexScan(n)
 Leading((it2 (kt (it1 (k (mk (mi1 (mi2 (t (rt (ci n))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('3'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('PFM:35 mm','RAT:1.33 : 1','RAT:1.66 : 1','RAT:1.85 : 1'))
AND (mi2.info in ('Adult','Comedy','Documentary','Drama','Mystery','Romance','Short','Thriller','Western'))
AND (kt.kind in ('tv series','video game','video movie'))
AND (rt.role in ('miscellaneous crew','producer'))
AND (n.gender in ('f','m'))
AND (t.production_year <= 1990)
AND (t.production_year >= 1950)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 1 1 0 1 1 0 1 3 4 3 4 4 3 4 4 5]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 15 12 13 14 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         1.         0.42857143 0.         0.
 0.         0.003226   0.00881218 0.         0.         0.
 0.         1.         0.         0.65136147 0.         0.16666667
 0.2157827  0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  73.04461835152858
the difference value is:  73.04461835152858
the difference value is:  73.04461835152858
Planning took 677.4ms
q33c, predicted time: 7041.9
q33c,(predicted 7041.9),/*+ NestLoop(kt it1 it2 mi1 mi2 t ci rt mk k n)
 NestLoop(kt it1 it2 mi1 mi2 t ci rt mk k)
 NestLoop(kt it1 it2 mi1 mi2 t ci rt mk)
 NestLoop(kt it1 it2 mi1 mi2 t ci rt)
 NestLoop(kt it1 it2 mi1 mi2 t ci)
 HashJoin(kt it1 it2 mi1 mi2 t)
 HashJoin(it1 it2 mi1 mi2 t)
 HashJoin(it2 mi1 mi2 t)
 HashJoin(mi1 mi2 t)
 HashJoin(mi2 t)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(it2)
 SeqScan(mi1)
 IndexScan(mi2)
 SeqScan(t)
 IndexScan(ci)
 SeqScan(rt)
 IndexScan(mk)
 IndexScan(k)
 IndexScan(n)
 Leading(((((((kt (it1 (it2 (mi1 (mi2 t))))) ci) rt) mk) k) n)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
movie_info as mi1,
info_type as it1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND it1.id = '8'
AND it2.id = '4'
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND mi1.info IN ('Brazil','India','Ireland','Italy','Netherlands','Philippines','Poland','USA')
AND mi2.info IN ('English','French','Italian','Malayalam','Polish','Portuguese','Tagalog')
AND kt.kind IN ('tv movie','tv series','video game')
AND rt.role IN ('cinematographer','composer')
AND n.gender IN ('m')
AND t.production_year <= 2015
AND 1990 < t.production_year

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 0 1 1 0 1 3 4 3 4 4 3 4]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         0.         0.42857143 0.         0.
 0.         0.00396671 0.00488409 0.         0.         0.
 0.         0.         0.         0.41559657 0.         0.16666667
 0.69063586 0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  41.22219112909883
the difference value is:  41.22219112909883
the difference value is:  41.22219112909883
Planning took 375.1ms
q34a, predicted time: 10.1
q34a,(predicted 10.1),/*+ HashJoin(it1 it2 rt kt n ci mi1 t mi2)
 HashJoin(it2 rt kt n ci mi1 t mi2)
 HashJoin(rt kt n ci mi1 t mi2)
 HashJoin(kt n ci mi1 t mi2)
 HashJoin(n ci mi1 t mi2)
 HashJoin(ci mi1 t mi2)
 HashJoin(mi1 t mi2)
 HashJoin(t mi2)
 SeqScan(it1)
 SeqScan(it2)
 SeqScan(rt)
 SeqScan(kt)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(mi1)
 SeqScan(t)
 SeqScan(mi2)
 Leading((it1 (it2 (rt (kt (n (ci (mi1 (t mi2))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
movie_info as mi1,
info_type as it1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND it1.id = '8'
AND it2.id = '4'
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND mi1.info IN ('Italy','Netherlands','Philippines','Poland','USA')
AND mi2.info IN ('English','French','Italian','Malayalam','Polish','Portuguese','Tagalog')
AND kt.kind IN ('tv movie','tv series','video game')
AND rt.role IN ('cinematographer','composer')
AND n.gender IN ('m')
AND t.production_year <= 2015
AND 1990 < t.production_year

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 0 1 1 0 1 3 4 3 4 4 3 4]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         0.         0.42857143 0.         0.
 0.         0.00368482 0.00488409 0.         0.         0.
 0.         0.         0.         0.41559657 0.         0.16666667
 0.69063586 0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  52.16388883734018
the difference value is:  52.16388883734018
the difference value is:  52.16388883734018
Planning took 247.6ms
q34b, predicted time: 6176.9
q34b,(predicted 6176.9),/*+ NestLoop(rt kt mi2 t mi1 it2 it1 ci n)
 NestLoop(kt mi2 t mi1 it2 it1 ci n)
 NestLoop(kt mi2 t mi1 it2 it1 ci)
 HashJoin(kt mi2 t mi1 it2 it1)
 HashJoin(kt mi2 t mi1 it2)
 HashJoin(kt mi2 t mi1)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(rt)
 SeqScan(kt)
 IndexScan(mi2)
 IndexScan(t)
 SeqScan(mi1)
 SeqScan(it2)
 SeqScan(it1)
 IndexScan(ci)
 IndexScan(n)
 Leading((rt ((((((kt (mi2 t)) mi1) it2) it1) ci) n))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
movie_info as mi1,
info_type as it1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND it1.id = '8'
AND it2.id = '4'
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND mi1.info IN ('Brazil','India','Ireland','Italy','Netherlands','Philippines','Poland','USA')
AND mi2.info IN ('English','French','Italian','Malayalam','Polish','Portuguese','Tagalog')
AND kt.kind IN ('tv movie','tv series','video game')
AND rt.role IN ('cinematographer','composer')
AND n.gender IN ('m')
AND t.production_year <= 2015
AND 2000 < t.production_year

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 0 1 1 0 1 3 4 3 4 4 3 4]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         0.         0.42857143 0.         0.
 0.         0.00396671 0.00488409 0.         0.         0.
 0.         0.         0.         0.41559657 0.         0.16666667
 0.5407347  0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  40.993927897593515
the difference value is:  40.993927897593515
the difference value is:  40.993927897593515
Planning took 386.7ms
q34c, predicted time: 6.9
q34c,(predicted 6.9),/*+ HashJoin(it2 n rt ci kt it1 mi1 t mi2)
 HashJoin(n rt ci kt it1 mi1 t mi2)
 HashJoin(rt ci kt it1 mi1 t mi2)
 HashJoin(ci kt it1 mi1 t mi2)
 HashJoin(kt it1 mi1 t mi2)
 HashJoin(it1 mi1 t mi2)
 HashJoin(mi1 t mi2)
 HashJoin(t mi2)
 SeqScan(it2)
 SeqScan(n)
 SeqScan(rt)
 SeqScan(ci)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(t)
 SeqScan(mi2)
 Leading((it2 (n (rt (ci (kt (it1 (mi1 (t mi2))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
movie_info as mi1,
info_type as it1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND it1.id = '3'
AND it2.id = '7'
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND mi1.info IN ('Comedy','Crime','Fantasy','Mystery','Short')
AND mi2.info IN ('LAB:FotoKem Laboratory, Burbank (CA), USA','MET:','MET:300 m','PCS:Spherical','RAT:1.33 : 1','RAT:1.66 : 1')
AND kt.kind IN ('movie','video movie')
AND rt.role IN ('miscellaneous crew')
AND n.gender IN ('f')
AND t.production_year <= 2015
AND 1950 < t.production_year

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 0 1 1 0 1 3 4 3 4 4 3 4]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         0.         0.2857143  0.         0.
 0.         0.00499167 0.00235371 0.         0.         0.
 0.         0.         0.         0.23576464 0.         0.08333334
 0.9038208  0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  52.2751874242348
the difference value is:  52.2751874242348
the difference value is:  52.2751874242348
Planning took 276.5ms
q35b, predicted time: 6166.7
q35b,(predicted 6166.7),/*+ NestLoop(rt it1 it2 kt mi2 t mi1 ci n)
 NestLoop(it1 it2 kt mi2 t mi1 ci n)
 NestLoop(it1 it2 kt mi2 t mi1 ci)
 HashJoin(it1 it2 kt mi2 t mi1)
 HashJoin(it2 kt mi2 t mi1)
 HashJoin(kt mi2 t mi1)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(rt)
 SeqScan(it1)
 SeqScan(it2)
 SeqScan(kt)
 IndexScan(mi2)
 IndexScan(t)
 SeqScan(mi1)
 IndexScan(ci)
 IndexScan(n)
 Leading((rt (((it1 (it2 ((kt (mi2 t)) mi1))) ci) n))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
movie_info as mi1,
info_type as it1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND it1.id = '3'
AND it2.id = '7'
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND mi1.info IN ('Fantasy','Mystery','Short')
AND mi2.info IN ('LAB:FotoKem Laboratory, Burbank (CA), USA','MET:','MET:300 m','PCS:Spherical','RAT:1.33 : 1','RAT:1.66 : 1')
AND kt.kind IN ('episode','movie','video movie')
AND rt.role IN ('miscellaneous crew')
AND n.gender IN ('f')
AND t.production_year <= 2015
AND 1925 < t.production_year

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 3 1 0 1 1 0 1 3 4 3 4 4 3 4]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4  5  4  0  0  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0]
query_enc_matrix for this sql:  [0.         1.         0.         0.         0.         0.
 0.         0.         0.         0.00884956 0.00884956 0.
 0.         0.         0.         0.42857143 0.         0.
 0.         0.00326705 0.00235371 0.         0.         0.
 0.         0.         0.         0.23576464 0.         0.08333334
 0.9303472  0.         0.        ]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  41.524142993510225
the difference value is:  41.524142993510225
the difference value is:  41.524142993510225
Planning took 182.9ms
q35c, predicted time: 8.1
q35c,(predicted 8.1),/*+ HashJoin(it2 mi2 kt it1 mi1 t rt ci n)
 HashJoin(mi2 kt it1 mi1 t rt ci n)
 HashJoin(kt it1 mi1 t rt ci n)
 HashJoin(it1 mi1 t rt ci n)
 HashJoin(mi1 t rt ci n)
 HashJoin(t rt ci n)
 HashJoin(rt ci n)
 HashJoin(ci n)
 SeqScan(it2)
 SeqScan(mi2)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(ci)
 SeqScan(n)
 Leading((it2 (mi2 (kt (it1 (mi1 (t (rt (ci n))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Austria','Czechoslovakia','Denmark','Hong Kong','Poland','Portugal','South Korea','Soviet Union','Sweden','Switzerland','Turkey','Yugoslavia'))
AND (it1.id IN ('15','8','97'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 8.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 1000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender IS NULL)
AND (n.name_pcode_nf in ('A4163','A4253','A5362','A6532','C5321','C6231','C6235','R516','R5316','S3152','S3521') OR n.name_pcode_nf IS NULL)
AND (ci.note in ('(deviser)','(producer)','(production assistant)','(senior producer)','(supervising producer)','(writer)') OR ci.note IS NULL)
AND (rt.role in ('cinematographer','composer','director','editor','miscellaneous crew','producer','production designer','writer'))
AND (it5.id in ('19'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 4 5 5 3 4 4 5 3]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5  6  5  0  0  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.3671482e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 2.6084343e-03
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.6735010e-02 2.8182682e-02 6.6666669e-01
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  115.30956653524342
Other difference exceed the threshold, need to switch module.
the difference value is:  115.30956653524342
Hash difference exceed the threshold, need to switch module.
the difference value is:  115.30956653524342
Nested loop difference exceed the threshold, need to switch module.
Planning took 2533.5ms
q36a, predicted time: 876.6
q36a,(predicted 876.6),/*+ HashJoin(it4 an it1 mi1 rt it3 kt mii1 it5 pi1 n ci t k mk mii2)
 HashJoin(an it1 mi1 rt it3 kt mii1 it5 pi1 n ci t k mk mii2)
 HashJoin(it1 mi1 rt it3 kt mii1 it5 pi1 n ci t k mk mii2)
 HashJoin(it1 mi1 rt it3 kt mii1 it5 pi1 n ci t k mk)
 HashJoin(mi1 rt it3 kt mii1 it5 pi1 n ci t k mk)
 HashJoin(rt it3 kt mii1 it5 pi1 n ci t k mk)
 HashJoin(it3 kt mii1 it5 pi1 n ci t k mk)
 HashJoin(kt mii1 it5 pi1 n ci t k mk)
 HashJoin(mii1 it5 pi1 n ci t k mk)
 HashJoin(it5 pi1 n ci t k mk)
 HashJoin(pi1 n ci t k mk)
 HashJoin(n ci t k mk)
 HashJoin(ci t k mk)
 HashJoin(t k mk)
 HashJoin(k mk)
 SeqScan(it4)
 SeqScan(an)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(rt)
 SeqScan(it3)
 SeqScan(kt)
 SeqScan(mii1)
 SeqScan(it5)
 SeqScan(pi1)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(t)
 IndexScan(k)
 IndexScan(mk)
 IndexScan(mii2)
 Leading((it4 (an ((it1 (mi1 (rt (it3 (kt (mii1 (it5 (pi1 (n (ci (t (k mk)))))))))))) mii2)))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Hong Kong','Poland','Portugal','South Korea','Soviet Union','Sweden','Switzerland','Turkey','Yugoslavia'))
AND (it1.id IN ('15','8','97'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 8.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 1000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender IS NULL)
AND (n.name_pcode_nf in ('A4163','A4253','A5362','A6532','C5321','C6231','C6235','R516','R5316','S3152','S3521') OR n.name_pcode_nf IS NULL)
AND (ci.note in ('(deviser)','(producer)','(production assistant)','(senior producer)','(supervising producer)','(writer)') OR ci.note IS NULL)
AND (rt.role in ('cinematographer','composer','director','editor','miscellaneous crew','producer','production designer','writer'))
AND (it5.id in ('19'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 3 5 4 5 4 5 3 4]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5  6  5  0  0  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.3671482e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.6873465e-03
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.6735010e-02 2.8182682e-02 6.6666669e-01
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  110.98913456646004
Other difference exceed the threshold, need to switch module.
the difference value is:  110.98913456646004
Hash difference exceed the threshold, need to switch module.
the difference value is:  110.98913456646004
Nested loop difference exceed the threshold, need to switch module.
Planning took 1228.5ms
q36c, predicted time: 226.6
q36c,(predicted 226.6),/*+ MergeJoin(it3 k mii2 kt pi1 t an rt ci n mk mi1 it5 mii1 it4 it1)
 MergeJoin(it3 k mii2 kt pi1 t an rt ci n mk mi1 it5 mii1 it4)
 MergeJoin(it3 k mii2 kt pi1 t an rt ci n mk mi1 it5 mii1)
 MergeJoin(k mii2 kt pi1 t an rt ci n mk mi1 it5 mii1)
 MergeJoin(k mii2 kt pi1 t an rt ci n mk mi1 it5)
 MergeJoin(k mii2 kt pi1 t an rt ci n mk mi1)
 MergeJoin(mii2 kt pi1 t an rt ci n mk mi1)
 MergeJoin(mii2 kt pi1 t an rt ci n mk)
 MergeJoin(kt pi1 t an rt ci n mk)
 MergeJoin(pi1 t an rt ci n mk)
 MergeJoin(t an rt ci n mk)
 MergeJoin(t an rt ci n)
 MergeJoin(an rt ci n)
 MergeJoin(rt ci n)
 HashJoin(rt ci)
 SeqScan(it3)
 SeqScan(k)
 SeqScan(mii2)
 SeqScan(kt)
 IndexScan(pi1)
 SeqScan(t)
 SeqScan(an)
 SeqScan(rt)
 IndexScan(ci)
 SeqScan(n)
 IndexScan(mk)
 SeqScan(mi1)
 IndexScan(it5)
 IndexScan(mii1)
 IndexScan(it4)
 SeqScan(it1)
 Leading((((it3 (((k ((mii2 (kt (pi1 ((t (an ((rt ci) n))) mk)))) mi1)) it5) mii1)) it4) it1)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('production designer'))
AND (n.gender in ('f'))
AND (t.production_year <= 2010)
AND (t.production_year >= 1952)
AND (k.keyword IN ('death','elmo','father-son-relationship','fight','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 7.4532312e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.3576464e-01 0.0000000e+00 8.3333336e-02
 7.4681133e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  64.068612745042
the difference value is:  64.068612745042
the difference value is:  64.068612745042
Planning took 709.6ms
q37a, predicted time: 6891.2
q37a,(predicted 6891.2),/*+ NestLoop(rt it1 mi1 it2 kt mi2 t mk k ci n)
 NestLoop(it1 mi1 it2 kt mi2 t mk k ci n)
 NestLoop(it1 mi1 it2 kt mi2 t mk k ci)
 NestLoop(it1 mi1 it2 kt mi2 t mk k)
 NestLoop(it1 mi1 it2 kt mi2 t mk)
 HashJoin(it1 mi1 it2 kt mi2 t)
 HashJoin(mi1 it2 kt mi2 t)
 HashJoin(it2 kt mi2 t)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(rt)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(it2)
 SeqScan(kt)
 IndexScan(mi2)
 IndexScan(t)
 IndexScan(mk)
 IndexScan(k)
 IndexScan(ci)
 IndexScan(n)
 Leading((rt (((((it1 (mi1 (it2 (kt (mi2 t))))) mk) k) ci) n))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('production designer'))
AND (n.gender in ('f'))
AND (t.production_year <= 2010)
AND (t.production_year >= 1952)
AND (k.keyword IN ('fight','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 5.2172618e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.3576464e-01 0.0000000e+00 8.3333336e-02
 7.4681133e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  54.203219943595876
the difference value is:  54.203219943595876
the difference value is:  54.203219943595876
Planning took 346.9ms
q37c, predicted time: 6.3
q37c,(predicted 6.3),/*+ HashJoin(kt it2 it1 k mk mi1 mi2 t rt n ci)
 HashJoin(it2 it1 k mk mi1 mi2 t rt n ci)
 HashJoin(it1 k mk mi1 mi2 t rt n ci)
 HashJoin(k mk mi1 mi2 t rt n ci)
 HashJoin(mk mi1 mi2 t rt n ci)
 HashJoin(mi1 mi2 t rt n ci)
 HashJoin(mi2 t rt n ci)
 HashJoin(t rt n ci)
 HashJoin(rt n ci)
 HashJoin(n ci)
 SeqScan(kt)
 SeqScan(it2)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(mi1)
 SeqScan(mi2)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(n)
 IndexScan(ci)
 Leading((kt (it2 (it1 (k (mk (mi1 (mi2 (t (rt (n ci))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('production designer'))
AND (n.gender in ('f'))
AND (t.production_year <= 2011)
AND (t.production_year >= 1949)
AND (k.keyword IN ('death','father-son-relationship','bruce','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.7079076e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.3576464e-01 0.0000000e+00 8.3333336e-02
 8.1741929e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  64.18247068126504
the difference value is:  64.18247068126504
the difference value is:  64.18247068126504
Planning took 967.7ms
q38a, predicted time: 6952.6
q38a,(predicted 6952.6),/*+ NestLoop(rt it1 mi1 it2 kt mi2 t ci n mk k)
 NestLoop(rt it1 mi1 it2 kt mi2 t ci n mk)
 NestLoop(rt it1 mi1 it2 kt mi2 t ci n)
 NestLoop(it1 mi1 it2 kt mi2 t ci n)
 NestLoop(it1 mi1 it2 kt mi2 t ci)
 HashJoin(it1 mi1 it2 kt mi2 t)
 HashJoin(mi1 it2 kt mi2 t)
 HashJoin(it2 kt mi2 t)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(rt)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(it2)
 SeqScan(kt)
 IndexScan(mi2)
 IndexScan(t)
 IndexScan(ci)
 IndexScan(n)
 IndexScan(mk)
 IndexScan(k)
 Leading((((rt (((it1 (mi1 (it2 (kt (mi2 t))))) ci) n)) mk) k)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('actress'))
AND (n.gender in ('f'))
AND (t.production_year <= 2011)
AND (t.production_year >= 1949)
AND (k.keyword IN ('death','father-son-relationship','bruce','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.7079076e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.3576464e-01 0.0000000e+00 8.3333336e-02
 8.1741929e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  54.325781009957055
the difference value is:  54.325781009957055
the difference value is:  54.325781009957055
Planning took 429.9ms
q38c, predicted time: 6.6
q38c,(predicted 6.6),/*+ HashJoin(it2 kt it1 k mk mi2 mi1 t rt n ci)
 HashJoin(kt it1 k mk mi2 mi1 t rt n ci)
 HashJoin(it1 k mk mi2 mi1 t rt n ci)
 HashJoin(k mk mi2 mi1 t rt n ci)
 HashJoin(mk mi2 mi1 t rt n ci)
 HashJoin(mi2 mi1 t rt n ci)
 HashJoin(mi1 t rt n ci)
 HashJoin(t rt n ci)
 HashJoin(rt n ci)
 HashJoin(n ci)
 SeqScan(it2)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(mi2)
 SeqScan(mi1)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(n)
 IndexScan(ci)
 Leading((it2 (kt (it1 (k (mk (mi2 (mi1 (t (rt (n ci))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('production designer'))
AND (n.gender in ('f'))
AND (t.production_year <= 2010)
AND (t.production_year >= 1950)
AND (k.keyword IN ('father-son-relationship','combat','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 5.9625847e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.3576464e-01 0.0000000e+00 8.3333336e-02
 7.5073051e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  64.07469014503145
the difference value is:  64.07469014503145
the difference value is:  64.07469014503145
Planning took 744.6ms
q39a, predicted time: 6894.3
q39a,(predicted 6894.3),/*+ NestLoop(rt it1 mi1 it2 kt mi2 t mk k ci n)
 NestLoop(it1 mi1 it2 kt mi2 t mk k ci n)
 NestLoop(it1 mi1 it2 kt mi2 t mk k ci)
 NestLoop(it1 mi1 it2 kt mi2 t mk k)
 NestLoop(it1 mi1 it2 kt mi2 t mk)
 HashJoin(it1 mi1 it2 kt mi2 t)
 HashJoin(mi1 it2 kt mi2 t)
 HashJoin(it2 kt mi2 t)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(rt)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(it2)
 SeqScan(kt)
 IndexScan(mi2)
 IndexScan(t)
 IndexScan(mk)
 IndexScan(k)
 IndexScan(ci)
 IndexScan(n)
 Leading((rt (((((it1 (mi1 (it2 (kt (mi2 t))))) mk) k) ci) n))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('production designer'))
AND (n.gender in ('f'))
AND (t.production_year <= 2020)
AND (t.production_year >= 1970)
AND (k.keyword IN ('father-son-relationship','combat','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 5.9625847e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.3576464e-01 0.0000000e+00 8.3333336e-02
 8.2503027e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  54.33956928611538
the difference value is:  54.33956928611538
the difference value is:  54.33956928611538
Planning took 390.6ms
q39b, predicted time: 6.7
q39b,(predicted 6.7),/*+ HashJoin(it2 kt it1 k mk mi2 mi1 t rt n ci)
 HashJoin(kt it1 k mk mi2 mi1 t rt n ci)
 HashJoin(it1 k mk mi2 mi1 t rt n ci)
 HashJoin(k mk mi2 mi1 t rt n ci)
 HashJoin(mk mi2 mi1 t rt n ci)
 HashJoin(mi2 mi1 t rt n ci)
 HashJoin(mi1 t rt n ci)
 HashJoin(t rt n ci)
 HashJoin(rt n ci)
 HashJoin(n ci)
 SeqScan(it2)
 SeqScan(kt)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(mi2)
 SeqScan(mi1)
 SeqScan(t)
 SeqScan(rt)
 IndexScan(n)
 IndexScan(ci)
 Leading((it2 (kt (it1 (k (mk (mi2 (mi1 (t (rt (n ci))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('production designer'))
AND (n.gender in ('m'))
AND (t.production_year <= 2010)
AND (t.production_year >= 1950)
AND (k.keyword IN ('father-son-relationship','combat','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 5.9625847e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 4.1559657e-01 0.0000000e+00 8.3333336e-02
 7.5073051e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  64.19534873668704
the difference value is:  64.19534873668704
the difference value is:  64.19534873668704
Planning took 1082.8ms
q39c, predicted time: 7098.8
q39c,(predicted 7098.8),/*+ NestLoop(rt it1 it2 mi1 kt mi2 t ci n mk k)
 NestLoop(rt it1 it2 mi1 kt mi2 t ci n mk)
 NestLoop(rt it1 it2 mi1 kt mi2 t ci n)
 NestLoop(it1 it2 mi1 kt mi2 t ci n)
 NestLoop(it1 it2 mi1 kt mi2 t ci)
 HashJoin(it1 it2 mi1 kt mi2 t)
 HashJoin(it2 mi1 kt mi2 t)
 HashJoin(mi1 kt mi2 t)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(rt)
 SeqScan(it1)
 SeqScan(it2)
 SeqScan(mi1)
 SeqScan(kt)
 IndexScan(mi2)
 IndexScan(t)
 IndexScan(ci)
 IndexScan(n)
 IndexScan(mk)
 IndexScan(k)
 Leading((((rt (((it1 (it2 (mi1 (kt (mi2 t))))) ci) n)) mk) k)) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1875)
AND (mi1.info IN ('Color','OFM:Live','OFM:Video','PFM:Video'))
AND (it1.id IN ('103','2','7'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 11.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 7.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('f'))
AND (n.name_pcode_nf in ('C6231','F6362','F6525','J513','R1631','R1632','R1636','R2631','S2153'))
AND (ci.note IS NULL)
AND (rt.role in ('actress'))
AND (it5.id in ('25'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4 3 4 4 4 4 4 5 3 4 5 4 5 4]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4 31  4  5 30  5  6 29  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.0610288e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 1.4285715e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 7.4442968e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 3.1177031e-03 1.4424813e-01 8.3333336e-02
 1.8108603e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  109.72822431504744
Other difference exceed the threshold, need to switch module.
the difference value is:  109.72822431504744
Hash difference exceed the threshold, need to switch module.
the difference value is:  109.72822431504744
Nested loop difference exceed the threshold, need to switch module.
Planning took 255.3ms
q3b, predicted time: 308.2
q3b,(predicted 308.2),/*+ MergeJoin(mii1 mii2 ci kt it1 mi1 t n rt mk an k pi1 it4 it3 it5)
 MergeJoin(mii1 mii2 ci kt it1 mi1 t n rt mk an k pi1 it4 it3)
 MergeJoin(mii1 mii2 ci kt it1 mi1 t n rt mk an k pi1 it4)
 MergeJoin(mii2 ci kt it1 mi1 t n rt mk an k pi1 it4)
 MergeJoin(mii2 ci kt it1 mi1 t n rt mk an k pi1)
 MergeJoin(ci kt it1 mi1 t n rt mk an k pi1)
 MergeJoin(ci kt it1 mi1 t n rt mk an k)
 MergeJoin(ci kt it1 mi1 t n rt mk an)
 MergeJoin(ci kt it1 mi1 t n rt mk)
 MergeJoin(ci kt it1 mi1 t n rt)
 MergeJoin(ci kt it1 mi1 t n)
 MergeJoin(ci kt it1 mi1 t)
 MergeJoin(kt it1 mi1 t)
 MergeJoin(it1 mi1 t)
 HashJoin(it1 mi1)
 SeqScan(mii1)
 SeqScan(mii2)
 IndexScan(ci)
 SeqScan(kt)
 IndexScan(it1)
 IndexScan(mi1)
 IndexScan(t)
 SeqScan(n)
 IndexScan(rt)
 IndexScan(mk)
 IndexScan(an)
 IndexScan(k)
 SeqScan(pi1)
 IndexScan(it4)
 SeqScan(it3)
 IndexScan(it5)
 Leading((((mii1 ((mii2 (((((((ci (kt ((it1 mi1) t))) n) rt) mk) an) k) pi1)) it4)) it3) it5)) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1875)
AND (mi1.info IN ('Color','OFM:Live','OFM:Video','PFM:Video'))
AND (it1.id IN ('103','2','7'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 11.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 7.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m','f'))
AND (n.name_pcode_nf in ('C6231','F6362','F6525','J513','R1631','R1632','R1636','R2631','S2153'))
AND (ci.note IS NULL)
AND (rt.role in ('actor','actress'))
AND (it5.id in ('25'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 3 4 3 4 4 4 4 4 4 5 4 4 5 3 5]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5 28  5  6  7  6  0  0  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.0610288e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 1.4285715e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 7.4442968e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 8.6133359e-03 1.4424813e-01 1.6666667e-01
 1.8108603e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  114.09953620949435
Other difference exceed the threshold, need to switch module.
the difference value is:  114.09953620949435
Hash difference exceed the threshold, need to switch module.
the difference value is:  114.09953620949435
Nested loop difference exceed the threshold, need to switch module.
Planning took 285.2ms
q3c, predicted time: 698.6
q3c,(predicted 698.6),/*+ HashJoin(mi1 an it5 it4 kt pi1 n ci k mk t mii1 it3 rt mii2 it1)
 HashJoin(mi1 an it5 it4 kt pi1 n ci k mk t mii1 it3 rt mii2)
 HashJoin(an it5 it4 kt pi1 n ci k mk t mii1 it3 rt mii2)
 HashJoin(it5 it4 kt pi1 n ci k mk t mii1 it3 rt mii2)
 HashJoin(it4 kt pi1 n ci k mk t mii1 it3 rt mii2)
 HashJoin(kt pi1 n ci k mk t mii1 it3 rt mii2)
 HashJoin(kt pi1 n ci k mk t mii1 it3 rt)
 HashJoin(pi1 n ci k mk t mii1 it3 rt)
 HashJoin(pi1 n ci k mk t mii1 it3)
 HashJoin(n ci k mk t mii1 it3)
 HashJoin(ci k mk t mii1 it3)
 HashJoin(k mk t mii1 it3)
 HashJoin(mk t mii1 it3)
 HashJoin(t mii1 it3)
 HashJoin(mii1 it3)
 SeqScan(mi1)
 SeqScan(an)
 SeqScan(it5)
 SeqScan(it4)
 SeqScan(kt)
 SeqScan(pi1)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(t)
 IndexScan(mii1)
 SeqScan(it3)
 IndexScan(rt)
 IndexScan(mii2)
 SeqScan(it1)
 Leading(((mi1 (an (it5 (it4 ((kt ((pi1 (n (ci (k (mk (t (mii1 it3))))))) rt)) mii2))))) it1)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('production designer'))
AND (n.gender in ('m'))
AND (t.production_year <= 2020)
AND (t.production_year >= 1970)
AND (k.keyword IN ('death','father-son-relationship','fight','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.7079076e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 4.1559657e-01 0.0000000e+00 8.3333336e-02
 8.2503027e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  54.467964960232244
the difference value is:  54.467964960232244
the difference value is:  54.467964960232244
Planning took 380.1ms
q40b, predicted time: 5.4
q40b,(predicted 5.4),/*+ HashJoin(kt it2 it1 k mk rt mi1 mi2 t n ci)
 HashJoin(it2 it1 k mk rt mi1 mi2 t n ci)
 HashJoin(it1 k mk rt mi1 mi2 t n ci)
 HashJoin(k mk rt mi1 mi2 t n ci)
 HashJoin(mk rt mi1 mi2 t n ci)
 HashJoin(rt mi1 mi2 t n ci)
 HashJoin(mi1 mi2 t n ci)
 HashJoin(mi2 t n ci)
 HashJoin(t n ci)
 HashJoin(n ci)
 SeqScan(kt)
 SeqScan(it2)
 SeqScan(it1)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(rt)
 SeqScan(mi1)
 SeqScan(mi2)
 SeqScan(t)
 IndexScan(n)
 IndexScan(ci)
 Leading((kt (it2 (it1 (k (mk (rt (mi1 (mi2 (t (n ci))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
movie_info as mi2,
info_type as it2,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k
WHERE
t.id = ci.movie_id
AND t.id = mi1.movie_id
AND t.id = mi2.movie_id
AND t.id = mk.movie_id
AND k.id = mk.keyword_id
AND mi1.movie_id = mi2.movie_id
AND mi1.info_type_id = it1.id
AND mi2.info_type_id = it2.id
AND (it1.id in ('7'))
AND (it2.id in ('8'))
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (mi1.info in ('CAM:Panavision Cameras and Lenses','OFM:16 mm','OFM:35 mm','OFM:Video','PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1','RAT:1.66 : 1','RAT:1.78 : 1','RAT:2.35 : 1','RAT:4:3'))
AND (mi2.info in ('East Germany','Hong Kong','Italy','Taiwan','UK','USA','West Germany'))
AND (kt.kind in ('episode','movie'))
AND (rt.role in ('actor'))
AND (n.gender in ('m'))
AND (t.production_year <= 2008)
AND (t.production_year >= 1952)
AND (k.keyword IN ('death','father-son-relationship','fight','gay','independent-film','lesbian-sex','mother-daughter-relationship','murder','number-in-title'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 0 1 1 4 4 4 3 4 4 3 3 4 4 4]
indexes_env_matrix for this sql:  [ 1  2 21  2  3 20  3  4 19  4  5 18  5  6 17  6  7 16  7  8 15  8  9 14
  9 10 13 10 11 12 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 8.8495575e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.7079076e-05
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 6.2499158e-03
 4.3328535e-03 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 4.1559657e-01 0.0000000e+00 8.3333336e-02
 6.3965404e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  64.03601077932267
the difference value is:  64.03601077932267
the difference value is:  64.03601077932267
Planning took 998.5ms
q40c, predicted time: 7024.0
q40c,(predicted 7024.0),/*+ NestLoop(rt it1 mi1 it2 kt mi2 t ci n mk k)
 NestLoop(rt it1 mi1 it2 kt mi2 t ci n mk)
 NestLoop(rt it1 mi1 it2 kt mi2 t ci n)
 NestLoop(it1 mi1 it2 kt mi2 t ci n)
 NestLoop(it1 mi1 it2 kt mi2 t ci)
 HashJoin(it1 mi1 it2 kt mi2 t)
 HashJoin(mi1 it2 kt mi2 t)
 HashJoin(it2 kt mi2 t)
 HashJoin(kt mi2 t)
 HashJoin(mi2 t)
 SeqScan(rt)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(it2)
 SeqScan(kt)
 IndexScan(mi2)
 IndexScan(t)
 IndexScan(ci)
 IndexScan(n)
 IndexScan(mk)
 IndexScan(k)
 Leading((((rt (((it1 (mi1 (it2 (kt (mi2 t))))) ci) n)) mk) k)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('2'))
AND (mi1.info in ('Black and White','Color'))
AND (kt.kind in ('movie','tv movie','tv series'))
AND (rt.role in ('actor','composer','miscellaneous crew','producer','production designer'))
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_cf in ('A2365','A6252','C52','D1614','E1524','E2163','L1214','L2','P5215','Q5325','R2425','S1452','T5212','V4524','V4626'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1990)
AND (cn.name in ('ABS-CBN','American Broadcasting Company (ABC)','British Broadcasting Corporation (BBC)'))
AND (ct.kind in ('distributors','production companies'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 1 1 1 0 1 1 1 0 1 3 4 3 4 4 4 3 4 4 5 4]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4 23  4  5 22  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 15 12 13 14 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.2766121e-05 5.0000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 4.2857143e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 8.2946429e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.5421748e-03 0.0000000e+00 4.1666666e-01
 7.0026720e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  71.61634128528246
the difference value is:  71.61634128528246
the difference value is:  71.61634128528246
Planning took 407.6ms
q4a, predicted time: 11.2
q4a,(predicted 11.2),/*+ HashJoin(it1 mi1 ct n rt ci kt k mk t cn mc)
 HashJoin(mi1 ct n rt ci kt k mk t cn mc)
 HashJoin(ct n rt ci kt k mk t cn mc)
 HashJoin(n rt ci kt k mk t cn mc)
 HashJoin(rt ci kt k mk t cn mc)
 HashJoin(ci kt k mk t cn mc)
 HashJoin(kt k mk t cn mc)
 HashJoin(k mk t cn mc)
 HashJoin(mk t cn mc)
 HashJoin(t cn mc)
 HashJoin(cn mc)
 SeqScan(it1)
 SeqScan(mi1)
 SeqScan(ct)
 SeqScan(n)
 SeqScan(rt)
 SeqScan(ci)
 SeqScan(kt)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(t)
 IndexScan(cn)
 IndexScan(mc)
 Leading((it1 (mi1 (ct (n (rt (ci (kt (k (mk (t (cn mc)))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('2'))
AND (mi1.info in ('Black and White','Color'))
AND (kt.kind in ('movie','tv movie','tv series'))
AND (rt.role in ('actor','composer','miscellaneous crew','producer','production designer'))
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_cf in ('A2365','A6252','C52','D1614','E1524','E2163','L1214','L2','P5215','Q5325','R2425','S1452','T5212','V4524','V4626'))
AND (t.production_year <= 2020)
AND (t.production_year >= 2000)
AND (cn.name in ('ABS-CBN','American Broadcasting Company (ABC)','British Broadcasting Corporation (BBC)'))
AND (ct.kind in ('distributors','production companies'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 0 1 1 1 1 1 1 0 1 1 3 4 4 3 4 4 3 4 5 4 3 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.2766121e-05 5.0000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 4.2857143e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 8.2946429e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.5421748e-03 0.0000000e+00 4.1666666e-01
 5.6326950e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  77.27465577347843
the difference value is:  77.27465577347843
the difference value is:  77.27465577347843
Planning took 282.3ms
q4b, predicted time: 4594.4
q4b,(predicted 4594.4),/*+ NestLoop(rt ct cn mc t mi1 it1 kt ci n mk k)
 NestLoop(rt ct cn mc t mi1 it1 kt ci n mk)
 NestLoop(rt ct cn mc t mi1 it1 kt ci n)
 NestLoop(ct cn mc t mi1 it1 kt ci n)
 NestLoop(ct cn mc t mi1 it1 kt ci)
 NestLoop(ct cn mc t mi1 it1 kt)
 NestLoop(ct cn mc t mi1 it1)
 NestLoop(ct cn mc t mi1)
 NestLoop(ct cn mc t)
 HashJoin(ct cn mc)
 HashJoin(cn mc)
 SeqScan(rt)
 SeqScan(ct)
 IndexScan(cn)
 IndexScan(mc)
 IndexScan(t)
 IndexScan(mi1)
 IndexScan(it1)
 SeqScan(kt)
 IndexScan(ci)
 IndexScan(n)
 IndexScan(mk)
 IndexScan(k)
 Leading((((rt (((((((ct (cn mc)) t) mi1) it1) kt) ci) n)) mk) k)) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('2'))
AND (mi1.info in ('Black and White','Color'))
AND (kt.kind in ('movie','tv movie','tv series'))
AND (rt.role in ('actor','composer','miscellaneous crew','producer','production designer'))
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_cf in ('E2163','L1214','L2','P5215','Q5325','R2425','S1452','T5212','V4524','V4626'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1990)
AND (cn.name in ('ABS-CBN','American Broadcasting Company (ABC)','British Broadcasting Corporation (BBC)'))
AND (ct.kind in ('production companies'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 3 1 1 1 1 1 1 0 1 1 3 4 4 3 4 4 4 4 5 4 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3  4  3  0  0  4  5 22  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 15 12 13 14 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.2766121e-05 2.5000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 4.2857143e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 8.2946429e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 9.4709260e-04 0.0000000e+00 4.1666666e-01
 7.0026720e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  71.44311024147004
the difference value is:  71.44311024147004
the difference value is:  71.44311024147004
Planning took 378.0ms
q4c, predicted time: 8.4
q4c,(predicted 8.4),/*+ HashJoin(it1 kt k mk cn rt n ci mi1 t mc ct)
 HashJoin(kt k mk cn rt n ci mi1 t mc ct)
 HashJoin(k mk cn rt n ci mi1 t mc ct)
 HashJoin(mk cn rt n ci mi1 t mc ct)
 HashJoin(cn rt n ci mi1 t mc ct)
 HashJoin(rt n ci mi1 t mc ct)
 HashJoin(n ci mi1 t mc ct)
 HashJoin(ci mi1 t mc ct)
 HashJoin(mi1 t mc ct)
 HashJoin(t mc ct)
 HashJoin(mc ct)
 SeqScan(it1)
 SeqScan(kt)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(cn)
 SeqScan(rt)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(mi1)
 SeqScan(t)
 SeqScan(mc)
 IndexScan(ct)
 Leading((it1 (kt (k (mk (cn (rt (n (ci (mi1 (t (mc ct)))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('2'))
AND (mi1.info in ('Color'))
AND (kt.kind in ('movie','tv series'))
AND (rt.role in ('actor','producer'))
AND (n.gender in ('m'))
AND (n.name_pcode_cf in ('B6261','B6526','J5252','M6352','R363','S3152','S5362'))
AND (t.production_year <= 1990)
AND (t.production_year >= 1950)
AND (cn.name in ('American Broadcasting Company (ABC)','Columbia Broadcasting System (CBS)','National Broadcasting Company (NBC)'))
AND (ct.kind in ('distributors'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 0 1 1 1 1 1 1 1 0 1 3 4 3 4 4 4 3 4 5 4 3 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.2766121e-05 2.5000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 2.8571430e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 6.4823278e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 3.9539379e-03 0.0000000e+00 1.6666667e-01
 2.1578270e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  77.07914506406824
the difference value is:  77.07914506406824
the difference value is:  77.07914506406824
Planning took 247.6ms
q5a, predicted time: 3933.2
q5a,(predicted 3933.2),/*+ NestLoop(rt it1 ct cn mc t mi1 kt ci n mk k)
 NestLoop(it1 ct cn mc t mi1 kt ci n mk k)
 NestLoop(it1 ct cn mc t mi1 kt ci n mk)
 NestLoop(it1 ct cn mc t mi1 kt ci n)
 NestLoop(it1 ct cn mc t mi1 kt ci)
 NestLoop(it1 ct cn mc t mi1 kt)
 NestLoop(it1 ct cn mc t mi1)
 NestLoop(ct cn mc t mi1)
 NestLoop(ct cn mc t)
 HashJoin(ct cn mc)
 HashJoin(cn mc)
 SeqScan(rt)
 SeqScan(it1)
 SeqScan(ct)
 IndexScan(cn)
 IndexScan(mc)
 IndexScan(t)
 IndexScan(mi1)
 SeqScan(kt)
 IndexScan(ci)
 IndexScan(n)
 IndexScan(mk)
 IndexScan(k)
 Leading((rt ((((((it1 (((ct (cn mc)) t) mi1)) kt) ci) n) mk) k))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('2'))
AND (mi1.info in ('Color'))
AND (kt.kind in ('movie','tv series'))
AND (rt.role in ('actor','producer'))
AND (n.gender in ('m'))
AND (n.name_pcode_cf in ('J5252','M6352','R363','S3152','S5362'))
AND (t.production_year <= 2020)
AND (t.production_year >= 1950)
AND (cn.name in ('American Broadcasting Company (ABC)','Columbia Broadcasting System (CBS)','National Broadcasting Company (NBC)'))
AND (ct.kind in ('distributors'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 3 1 1 1 1 0 1 1 1 0 1 3 4 3 4 4 4 3 4 5 4 4]
indexes_env_matrix for this sql:  [ 1  2  3  2  0  0  3  4 23  4  5 22  5  6 21  6  7 20  7  8 19  8  9 18
  9 10 17 10 11 16 11 12 15 12 13 14 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.2766121e-05 2.5000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 2.8571430e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 6.4823278e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 3.4800316e-03 0.0000000e+00 1.6666667e-01
 9.0642136e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  71.52037754481474
the difference value is:  71.52037754481474
the difference value is:  71.52037754481474
Planning took 314.5ms
q5b, predicted time: 15.2
q5b,(predicted 15.2),/*+ HashJoin(k mk it1 kt rt mi1 cn n ci t mc ct)
 HashJoin(mk it1 kt rt mi1 cn n ci t mc ct)
 HashJoin(it1 kt rt mi1 cn n ci t mc ct)
 HashJoin(kt rt mi1 cn n ci t mc ct)
 HashJoin(rt mi1 cn n ci t mc ct)
 HashJoin(mi1 cn n ci t mc ct)
 HashJoin(cn n ci t mc ct)
 HashJoin(n ci t mc ct)
 HashJoin(ci t mc ct)
 HashJoin(t mc ct)
 HashJoin(mc ct)
 SeqScan(k)
 SeqScan(mk)
 SeqScan(it1)
 SeqScan(kt)
 SeqScan(rt)
 SeqScan(mi1)
 SeqScan(cn)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(t)
 SeqScan(mc)
 IndexScan(ct)
 Leading((k (mk (it1 (kt (rt (mi1 (cn (n (ci (t (mc ct)))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*) FROM title as t,
kind_type as kt,
info_type as it1,
movie_info as mi1,
cast_info as ci,
role_type as rt,
name as n,
movie_keyword as mk,
keyword as k,
movie_companies as mc,
company_type as ct,
company_name as cn
WHERE
t.id = ci.movie_id
AND t.id = mc.movie_id
AND t.id = mi1.movie_id
AND t.id = mk.movie_id
AND mc.company_type_id = ct.id
AND mc.company_id = cn.id
AND k.id = mk.keyword_id
AND mi1.info_type_id = it1.id
AND t.kind_id = kt.id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND (it1.id IN ('2'))
AND (mi1.info in ('Color'))
AND (kt.kind in ('movie','tv series'))
AND (rt.role in ('actress','producer'))
AND (n.gender in ('f'))
AND (n.name_pcode_cf in ('B6261','B6526','J5252','M6352','R363','S3152','S5362'))
AND (t.production_year <= 1990)
AND (t.production_year >= 1950)
AND (cn.name in ('American Broadcasting Company (ABC)','Columbia Broadcasting System (CBS)','National Broadcasting Company (NBC)'))
AND (ct.kind in ('distributors'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 0 1 1 1 1 1 0 1 3 4 3 4 4 4 3 4 3 4 5 4]
indexes_env_matrix for this sql:  [ 1  2 23  2  3 22  3  4 21  4  5 20  5  6 19  6  7 18  7  8 17  8  9 16
  9 10 15 10 11 14 11 12 13 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.2766121e-05 2.5000000e-01 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 2.8571430e-01 0.0000000e+00 1.0000000e+00 0.0000000e+00 6.4823278e-03
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 2.2430762e-03 0.0000000e+00 1.6666667e-01
 2.1578270e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  77.07913493129762
the difference value is:  77.07913493129762
the difference value is:  77.07913493129762
Planning took 242.1ms
q5c, predicted time: 3931.4
q5c,(predicted 3931.4),/*+ NestLoop(rt it1 ct cn mc t mi1 kt ci n mk k)
 NestLoop(it1 ct cn mc t mi1 kt ci n mk k)
 NestLoop(it1 ct cn mc t mi1 kt ci n mk)
 NestLoop(it1 ct cn mc t mi1 kt ci n)
 NestLoop(it1 ct cn mc t mi1 kt ci)
 NestLoop(it1 ct cn mc t mi1 kt)
 NestLoop(it1 ct cn mc t mi1)
 NestLoop(ct cn mc t mi1)
 NestLoop(ct cn mc t)
 HashJoin(ct cn mc)
 HashJoin(cn mc)
 SeqScan(rt)
 SeqScan(it1)
 SeqScan(ct)
 IndexScan(cn)
 IndexScan(mc)
 IndexScan(t)
 IndexScan(mi1)
 SeqScan(kt)
 IndexScan(ci)
 IndexScan(n)
 IndexScan(mk)
 IndexScan(k)
 Leading((rt ((((((it1 (((ct (cn mc)) t) mi1)) kt) ci) n) mk) k))) */
---------------------------------------
sql_str:  SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND an.person_id = n.id AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND an.person_id = ci.person_id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 3 4 4 4 4 4 5 4]
indexes_env_matrix for this sql:  [ 1  2 15  2  3 14  3  4 13  4  5 12  5  6 11  6  7 10  7  8  9  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 3.6416635e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 7.4532309e-06
 0.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.0000000e+00 0.0000000e+00 0.0000000e+00
 1.0000000e+00 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  25.5375032644358
the difference value is:  25.5375032644358
the difference value is:  25.5375032644358
Planning took 359.8ms
q6a, predicted time: 43.9
q6a,(predicted 43.9),/*+ HashJoin(t k cn mk an n ci mc)
 HashJoin(k cn mk an n ci mc)
 HashJoin(cn mk an n ci mc)
 HashJoin(mk an n ci mc)
 HashJoin(an n ci mc)
 HashJoin(n ci mc)
 HashJoin(ci mc)
 SeqScan(t)
 SeqScan(k)
 SeqScan(cn)
 SeqScan(mk)
 SeqScan(an)
 SeqScan(n)
 IndexScan(ci)
 IndexScan(mc)
 Leading((t (k (cn (mk (an (n (ci mc)))))))) */
---------------------------------------
sql_str:  SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[uk]' AND k.keyword ='character-name-in-title' AND an.person_id = n.id AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND an.person_id = ci.person_id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id;

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 3 4 4 4 4 5 4 4]
indexes_env_matrix for this sql:  [ 1  2 15  2  3 14  3  4 13  4  5 12  5  6 11  6  7 10  7  8  9  8  0  0
  9  0  0 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0]
query_enc_matrix for this sql:  [1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 9.361822e-05 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 7.453231e-06
 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
 1.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
 1.000000e+00 0.000000e+00 0.000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  35.10822852254904
the difference value is:  35.10822852254904
the difference value is:  35.10822852254904
Planning took 202.1ms
q6b, predicted time: 6713.9
q6b,(predicted 6713.9),/*+ HashJoin(k n ci cn mc t mk an)
 HashJoin(k n ci cn mc t mk)
 HashJoin(n ci cn mc t mk)
 HashJoin(n ci cn mc t)
 HashJoin(ci cn mc t)
 HashJoin(ci cn mc)
 HashJoin(cn mc)
 SeqScan(k)
 SeqScan(n)
 SeqScan(ci)
 IndexScan(cn)
 SeqScan(mc)
 IndexScan(t)
 IndexScan(mk)
 IndexScan(an)
 Leading(((k ((n ((ci (cn mc)) t)) mk)) an)) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('tv movie','video movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1975)
AND (mi1.info IN ('Biography','Fantasy','OFM:35 mm','OFM:Video','Romance','Sci-Fi','Sport','Thriller'))
AND (it1.id IN ('3','7'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 5000.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 500000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('f') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('C6235') OR n.name_pcode_nf IS NULL)
AND (ci.note in ('(archive footage)') OR ci.note IS NULL)
AND (rt.role in ('actress'))
AND (it5.id in ('34'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 4 3 5 4 5 4 5 3 4]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5  6  5  0  0  6  7 28  7  8 27  8  9 26
  9 10 25 10 11 24 11 12 23 12 13 22 13 14 21 14 15 20 15 16 19 16 17 18
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.0810786e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 2.9960392e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.5144364e-02 6.8371450e-03 8.3333336e-02
 7.9754597e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  110.3436022879113
Other difference exceed the threshold, need to switch module.
the difference value is:  110.3436022879113
Hash difference exceed the threshold, need to switch module.
the difference value is:  110.3436022879113
Nested loop difference exceed the threshold, need to switch module.
Planning took 278.4ms
q7a, predicted time: 289.8
q7a,(predicted 289.8),/*+ MergeJoin(it4 it5 pi1 k rt mii2 ci kt it1 mi1 t n mk an mii1 it3)
 MergeJoin(it4 it5 pi1 k rt mii2 ci kt it1 mi1 t n mk an mii1)
 MergeJoin(it5 pi1 k rt mii2 ci kt it1 mi1 t n mk an mii1)
 MergeJoin(it5 pi1 k rt mii2 ci kt it1 mi1 t n mk an)
 MergeJoin(pi1 k rt mii2 ci kt it1 mi1 t n mk an)
 MergeJoin(k rt mii2 ci kt it1 mi1 t n mk an)
 MergeJoin(rt mii2 ci kt it1 mi1 t n mk an)
 MergeJoin(mii2 ci kt it1 mi1 t n mk an)
 MergeJoin(ci kt it1 mi1 t n mk an)
 MergeJoin(ci kt it1 mi1 t n mk)
 MergeJoin(ci kt it1 mi1 t n)
 MergeJoin(ci kt it1 mi1 t)
 MergeJoin(kt it1 mi1 t)
 MergeJoin(it1 mi1 t)
 HashJoin(it1 mi1)
 SeqScan(it4)
 IndexScan(it5)
 SeqScan(pi1)
 IndexScan(k)
 SeqScan(rt)
 SeqScan(mii2)
 IndexScan(ci)
 SeqScan(kt)
 IndexScan(it1)
 IndexScan(mi1)
 IndexScan(t)
 SeqScan(n)
 IndexScan(mk)
 IndexScan(an)
 IndexScan(mii1)
 IndexScan(it3)
 Leading(((it4 ((it5 (pi1 (k (rt (mii2 ((((ci (kt ((it1 mi1) t))) n) mk) an)))))) mii1)) it3)) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('tv movie','video movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1975)
AND (mi1.info IN ('Biography','Fantasy','OFM:35 mm','OFM:Video','Romance','Sci-Fi','Sport','Thriller'))
AND (it1.id IN ('3','7'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 5000.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 500000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('C6235') OR n.name_pcode_nf IS NULL)
AND (ci.note in ('(archive footage)') OR ci.note IS NULL)
AND (rt.role in ('actor'))
AND (it5.id in ('34'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 5 4 4 4 4 5 3 5 3 3]
indexes_env_matrix for this sql:  [ 1  2 31  2  3 30  3  4 29  4  5 28  5  6 27  6  7 26  7  8 25  8  9 24
  9 10 23 10 11 22 11 12 21 12 13 20 13 14 19 14 15 18 15 16 17 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0 28  0  0 29  0  0 30  0  0 31  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.0810786e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 2.9960392e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 1.8676706e-02 6.8371450e-03 8.3333336e-02
 7.9754597e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  112.67926965504921
Other difference exceed the threshold, need to switch module.
the difference value is:  112.67926965504921
Hash difference exceed the threshold, need to switch module.
the difference value is:  112.67926965504921
Nested loop difference exceed the threshold, need to switch module.
Planning took 427.0ms
q7b, predicted time: 716.7
q7b,(predicted 716.7),/*+ HashJoin(it5 an pi1 mi1 kt it4 mii2 k rt mk n ci t mii1 it3 it1)
 HashJoin(it5 an pi1 mi1 kt it4 mii2 k rt mk n ci t mii1 it3)
 HashJoin(an pi1 mi1 kt it4 mii2 k rt mk n ci t mii1 it3)
 HashJoin(pi1 mi1 kt it4 mii2 k rt mk n ci t mii1 it3)
 HashJoin(mi1 kt it4 mii2 k rt mk n ci t mii1 it3)
 HashJoin(kt it4 mii2 k rt mk n ci t mii1 it3)
 HashJoin(it4 mii2 k rt mk n ci t mii1 it3)
 HashJoin(mii2 k rt mk n ci t mii1 it3)
 HashJoin(k rt mk n ci t mii1 it3)
 HashJoin(rt mk n ci t mii1 it3)
 HashJoin(mk n ci t mii1 it3)
 HashJoin(n ci t mii1 it3)
 HashJoin(ci t mii1 it3)
 HashJoin(t mii1 it3)
 HashJoin(mii1 it3)
 SeqScan(it5)
 SeqScan(an)
 SeqScan(pi1)
 SeqScan(mi1)
 SeqScan(kt)
 SeqScan(it4)
 SeqScan(mii2)
 SeqScan(k)
 SeqScan(rt)
 SeqScan(mk)
 SeqScan(n)
 SeqScan(ci)
 SeqScan(t)
 IndexScan(mii1)
 SeqScan(it3)
 IndexScan(it1)
 Leading(((it5 (an (pi1 (mi1 (kt (it4 (mii2 (k (rt (mk (n (ci (t (mii1 it3)))))))))))))) it1)) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND mii2.movie_id = mii1.movie_id
AND mi1.movie_id = mii1.movie_id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Black and White'))
AND (it1.id IN ('2'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND an.person_id = pi1.person_id
AND rt.id = ci.role_id
AND (n.gender in ('f') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('A5136','B4532','C6435','H4524','J2451','J6362','L2525','M6415','S4125','W5245'))
AND (ci.note in ('(writer)') OR ci.note IS NULL)
AND (rt.role in ('actress','cinematographer','writer'))
AND (it5.id in ('26'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 1 0 1 1 1 3 4 4 4 3 4 4 3 5 4 3 3 4 3]
indexes_env_matrix for this sql:  [ 1  2 27  2  3 26  3  4 25  4  5 24  5  6 23  6  7 22  7  8 21  8  9 20
  9 10 19 10 11 18 11 12 17 12 13 16 13 14 15 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.1365104e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 0.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.8122478e-03
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 0.0000000e+00 0.0000000e+00 3.9400204e-04 4.6092607e-02 2.5000000e-01
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  85.84553908685912
the difference value is:  85.84553908685912
the difference value is:  85.84553908685912
Planning took 413.5ms
q8a, predicted time: 6.8
q8a,(predicted 6.8),/*+ HashJoin(it3 n an it4 mii2 mii1 it5 rt kt pi1 ci t it1 mi1)
 HashJoin(n an it4 mii2 mii1 it5 rt kt pi1 ci t it1 mi1)
 HashJoin(an it4 mii2 mii1 it5 rt kt pi1 ci t it1 mi1)
 HashJoin(it4 mii2 mii1 it5 rt kt pi1 ci t it1 mi1)
 HashJoin(mii2 mii1 it5 rt kt pi1 ci t it1 mi1)
 HashJoin(mii1 it5 rt kt pi1 ci t it1 mi1)
 HashJoin(it5 rt kt pi1 ci t it1 mi1)
 HashJoin(rt kt pi1 ci t it1 mi1)
 HashJoin(kt pi1 ci t it1 mi1)
 HashJoin(pi1 ci t it1 mi1)
 HashJoin(ci t it1 mi1)
 HashJoin(t it1 mi1)
 HashJoin(it1 mi1)
 SeqScan(it3)
 SeqScan(n)
 SeqScan(an)
 SeqScan(it4)
 SeqScan(mii2)
 SeqScan(mii1)
 SeqScan(it5)
 SeqScan(rt)
 SeqScan(kt)
 SeqScan(pi1)
 SeqScan(ci)
 SeqScan(t)
 IndexScan(it1)
 IndexScan(mi1)
 Leading((it3 (n (an (it4 (mii2 (mii1 (it5 (rt (kt (pi1 (ci (t (it1 mi1)))))))))))))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
aka_name as an,
name as n,
info_type as it5,
person_info as pi1,
cast_info as ci,
role_type as rt
WHERE
t.id = mi1.movie_id
AND t.id = ci.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND mii2.movie_id = mii1.movie_id
AND mi1.movie_id = mii1.movie_id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 2015)
AND (t.production_year >= 1925)
AND (mi1.info IN ('Black and White'))
AND (it1.id IN ('2'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 10000.0)
AND n.id = ci.person_id
AND ci.person_id = pi1.person_id
AND it5.id = pi1.info_type_id
AND n.id = pi1.person_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND an.person_id = pi1.person_id
AND rt.id = ci.role_id
AND (n.gender in ('m') OR n.gender IS NULL)
AND (n.name_pcode_nf in ('A5136','B4532','C6435','H4524','J2451','J6362','L2525','M6415','S4125','W5245'))
AND (ci.note in ('(writer)') OR ci.note IS NULL)
AND (rt.role in ('actor','cinematographer','writer'))
AND (it5.id in ('26'))

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 1 0 1 1 1 3 4 4 4 3 4 4 3 5 4 3 3 4 3]
indexes_env_matrix for this sql:  [ 1  2 27  2  3 26  3  4 25  4  5 24  5  6 23  6  7 22  7  8 21  8  9 20
  9 10 19 10 11 18 11 12 17 12 13 16 13 14 15 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0 20  0  0 21  0  0 22  0  0 23  0  0 24  0  0
 25  0  0 26  0  0 27  0  0]
query_enc_matrix for this sql:  [1.0000000e+00 6.1365104e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 8.8495575e-03
 0.0000000e+00 8.8495575e-03 8.8495575e-03 8.8495575e-03 0.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.8122478e-03
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 0.0000000e+00 0.0000000e+00 4.8590387e-04 4.6092607e-02 2.5000000e-01
 9.3211162e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  94.72237254803804
the difference value is:  94.72237254803804
the difference value is:  94.72237254803804
Planning took 1547.2ms
q8b, predicted time: 7096.2
q8b,(predicted 7096.2),/*+ HashJoin(mii2 an it3 it1 rt kt it5 pi1 t mii1 mi1 ci n it4)
 HashJoin(mii2 an it3 it1 rt kt it5 pi1 t mii1 mi1 ci n)
 HashJoin(an it3 it1 rt kt it5 pi1 t mii1 mi1 ci n)
 HashJoin(it3 it1 rt kt it5 pi1 t mii1 mi1 ci n)
 HashJoin(it1 rt kt it5 pi1 t mii1 mi1 ci n)
 HashJoin(rt kt it5 pi1 t mii1 mi1 ci n)
 HashJoin(kt it5 pi1 t mii1 mi1 ci n)
 HashJoin(it5 pi1 t mii1 mi1 ci n)
 HashJoin(pi1 t mii1 mi1 ci n)
 HashJoin(pi1 t mii1 mi1 ci)
 HashJoin(t mii1 mi1 ci)
 HashJoin(t mii1 mi1)
 HashJoin(mii1 mi1)
 SeqScan(mii2)
 SeqScan(an)
 SeqScan(it3)
 SeqScan(it1)
 SeqScan(rt)
 SeqScan(kt)
 SeqScan(it5)
 SeqScan(pi1)
 SeqScan(t)
 IndexScan(mii1)
 IndexScan(mi1)
 SeqScan(ci)
 IndexScan(n)
 IndexScan(it4)
 Leading(((mii2 (an (it3 (it1 (rt (kt (it5 ((pi1 ((t (mii1 mi1)) ci)) n)))))))) it4)) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k
WHERE
t.id = mi1.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mii2.movie_id = mii1.movie_id
AND mi1.movie_id = mii1.movie_id
AND mk.movie_id = mi1.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1925)
AND (mi1.info IN ('PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1'))
AND (it1.id IN ('1','16','7'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 1000.0)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 5 3 3 5]
indexes_env_matrix for this sql:  [ 1  2 19  2  3 18  3  4 17  4  5 16  5  6 15  6  7 14  7  8 13  8  9 12
  9 10 11 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 0.0000000e+00 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 4.3821599e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.3999696e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  42.3242186602816
the difference value is:  42.3242186602816
the difference value is:  42.3242186602816
Planning took 324.6ms
q9a, predicted time: 208.0
q9a,(predicted 208.0),/*+ MergeJoin(kt it1 mi1 mii1 it3 mk k mii2 it4 t)
 HashJoin(it1 mi1 mii1 it3 mk k mii2 it4 t)
 HashJoin(it1 mi1 mii1 it3 mk k mii2 it4)
 HashJoin(it1 mi1 mii1 it3 mk k mii2)
 HashJoin(it1 mi1 mii1 it3 mk k)
 HashJoin(it1 mi1 mii1 it3 mk)
 HashJoin(it1 mi1 mii1 it3)
 HashJoin(it1 mi1 mii1)
 HashJoin(it1 mi1)
 SeqScan(kt)
 IndexScan(it1)
 IndexScan(mi1)
 IndexScan(mii1)
 IndexScan(it3)
 SeqScan(mk)
 SeqScan(k)
 IndexScan(mii2)
 SeqScan(it4)
 SeqScan(t)
 Leading((kt ((((((((it1 mi1) mii1) it3) mk) k) mii2) it4) t))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k
WHERE
t.id = mi1.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mii2.movie_id = mii1.movie_id
AND mi1.movie_id = mii1.movie_id
AND mk.movie_id = mi1.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 2020)
AND (t.production_year >= 1925)
AND (mi1.info IN ('PCS:Spherical','PFM:35 mm','RAT:1.33 : 1','RAT:1.37 : 1'))
AND (it1.id IN ('1','16','7'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 1000.0)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 5 3 3 5]
indexes_env_matrix for this sql:  [ 1  2 19  2  3 18  3  4 17  4  5 16  5  6 15  6  7 14  7  8 13  8  9 12
  9 10 11 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 0.0000000e+00 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 4.3821599e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 9.3211436e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  54.59113135338289
the difference value is:  54.59113135338289
the difference value is:  54.59113135338289
Planning took 706.0ms
q9b, predicted time: 431.5
q9b,(predicted 431.5),/*+ HashJoin(k mk kt it4 mi1 t mii1 mii2 it1 it3)
 HashJoin(mk kt it4 mi1 t mii1 mii2 it1 it3)
 MergeJoin(kt it4 mi1 t mii1 mii2 it1 it3)
 MergeJoin(kt it4 mi1 t mii1 mii2 it1)
 MergeJoin(it4 mi1 t mii1 mii2 it1)
 MergeJoin(it4 mi1 t mii1 mii2)
 MergeJoin(mi1 t mii1 mii2)
 MergeJoin(t mii1 mii2)
 HashJoin(mii1 mii2)
 SeqScan(k)
 SeqScan(mk)
 IndexScan(kt)
 IndexScan(it4)
 SeqScan(mi1)
 IndexScan(t)
 IndexScan(mii1)
 IndexScan(mii2)
 IndexScan(it1)
 IndexScan(it3)
 Leading((k (mk ((kt ((it4 (mi1 (t (mii1 mii2)))) it1)) it3)))) */
---------------------------------------
sql_str:  SELECT COUNT(*)
FROM title as t,
movie_info as mi1,
kind_type as kt,
info_type as it1,
info_type as it3,
info_type as it4,
movie_info_idx as mii1,
movie_info_idx as mii2,
movie_keyword as mk,
keyword as k
WHERE
t.id = mi1.movie_id
AND t.id = mii1.movie_id
AND t.id = mii2.movie_id
AND t.id = mk.movie_id
AND mii2.movie_id = mii1.movie_id
AND mi1.movie_id = mii1.movie_id
AND mk.movie_id = mi1.movie_id
AND mk.keyword_id = k.id
AND mi1.info_type_id = it1.id
AND mii1.info_type_id = it3.id
AND mii2.info_type_id = it4.id
AND t.kind_id = kt.id
AND (kt.kind IN ('episode','movie'))
AND (t.production_year <= 1975)
AND (t.production_year >= 1900)
AND (mi1.info IN ('RAT:1.33 : 1','RAT:1.37 : 1'))
AND (it1.id IN ('1','16','7'))
AND it3.id = '100'
AND it4.id = '101'
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii2.info::float <= 7.0)
AND (mii2.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 3.0 <= mii2.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND 0.0 <= mii1.info::float)
AND (mii1.info ~ '^(?:[1-9]\d*|0)?(?:\.\d+)?$' AND mii1.info::float <= 1000.0)

Features: [GROUP BY, ORDER BY, Aggregate Function, Subquery]
Vector:  [0, 0, 1, 0]
operators_env_matrix for this sql:  [1 1 1 1 1 1 1 1 1 3 4 4 4 4 4 5 3 3 5]
indexes_env_matrix for this sql:  [ 1  2 19  2  3 18  3  4 17  4  5 16  5  6 15  6  7 14  7  8 13  8  9 12
  9 10 11 10  0  0 11  0  0 12  0  0 13  0  0 14  0  0 15  0  0 16  0  0
 17  0  0 18  0  0 19  0  0]
query_enc_matrix for this sql:  [0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
 0.0000000e+00 8.8495575e-03 8.8495575e-03 0.0000000e+00 1.0000000e+00
 2.8571430e-01 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.7802507e-02
 0.0000000e+00 0.0000000e+00 8.6084771e-04 8.3403679e-04 0.0000000e+00
 1.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
 1.7845187e-01 0.0000000e+00 0.0000000e+00]
sql_feature_encode_matrix for this sql:  [0 0 1 0]
the difference value is:  42.33596009027944
the difference value is:  42.33596009027944
the difference value is:  42.33596009027944
Planning took 218.2ms
q9c, predicted time: 204.5
